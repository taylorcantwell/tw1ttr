{
  "version": 3,
  "sources": ["../../server.js", "../../../../node_modules/@remix-run/dev/compiler/shims/react.ts", "server-entry-module:@remix-run/dev/server-build", "../../app/entry.server.tsx", "/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/root.tsx", "../../app/helpers/formatDate.ts", "../../app/helpers/composeRequest.ts", "../../app/helpers/unpackRequest.ts", "../../app/config.ts", "../../app/helpers/apiEndpoints.server.ts", "../../app/helpers/apiEndpointsClient.ts", "../../app/helpers/links.ts", "../../app/helpers/stopPropagation.ts", "../../app/modules/shared/Buttons/BackArrow.tsx", "../../app/modules/shared/Buttons/PrimaryButton.tsx", "../../app/modules/shared/Loaders/BounceLoader.tsx", "../../app/modules/shared/Loaders/SpinnerLoader.tsx", "../../app/modules/shared/Buttons/SubmitButton.tsx", "../../app/modules/shared/TweetCard/TweetCard.tsx", "../../app/modules/shared/TweetCard/components/TweetCardButtons/TweetCardButtons.tsx", "../../app/modules/shared/TweetCard/components/TweetCardButtons/components/TweetCardButton.tsx", "../../app/hooks/useAuthGuard.ts", "../../app/hooks/useMatchesData.ts", "../../app/hooks/useOptionalUser.ts", "../../app/hooks/useImageUpload.ts", "../../app/modules/shared/TweetCard/components/TweetCardComments/TweetCardComments.tsx", "../../app/modules/shared/TweetCard/components/TweetCardComments/components/TweetCardLikeButton.tsx", "../../app/modules/shared/UserAvatar.tsx", "../../app/modules/shared/AvatarPlaceHolder.tsx", "../../app/modules/shared/TweetCard/components/TweetCardContent.tsx", "../../app/modules/shared/TweetCard/components/TweetCardCounters.tsx", "../../app/modules/shared/TweetCard/components/TweetCardImages.tsx", "../../app/modules/shared/TweetCard/components/TweetCardReply.tsx", "../../app/modules/shared/TweetCard/hooks/useTweetReply.ts", "../../app/modules/shared/ValidatedInput.tsx", "../../app/modules/shared/AsideMenu.tsx", "../../app/modules/shared/Layouts/PrimaryLayoutContainer.tsx", "../../app/modules/shared/TweetList.tsx", "../../app/modules/shared/Fade.tsx", "../../app/modules/shared/api.server.ts", "/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell.tsx", "../../app/modules/Shell/Navbar/components/LoggedInNavigation.tsx", "../../app/modules/Shell/Navbar/components/AvatarDropDown.tsx", "../../app/modules/Shell/Navbar/components/NavigationLink.tsx", "../../app/modules/Shell/Navbar/components/LoggedOutNavigation.tsx", "../../app/modules/Shell/Navbar/Navbar.tsx", "../../app/modules/Shell/MobileFooter.tsx", "../../app/modules/Shell/shell.server.ts", "/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/$username.tsx", "../../app/modules/Profile/Profile.tsx", "../../app/modules/Profile/components/ProfileBanner.tsx", "../../app/modules/Profile/components/UpdateProfileBanner.tsx", "../../app/modules/Profile/hooks/useUpdateProfile.ts", "../../app/modules/Profile/components/ImageUploadButton.tsx", "../../app/modules/Profile/profile.server.ts", "/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/$username/followers.tsx", "../../app/modules/shared/UserDialog/UserDialog.tsx", "../../app/modules/shared/UserDialog/components/UserCard.tsx", "../../app/modules/shared/UserDialog/components/UserCardList.tsx", "/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/$username/following.tsx", "/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/bookmarks.tsx", "../../app/modules/Bookmarks/Bookmarks.tsx", "../../app/modules/Bookmarks/bookmarks.server.ts", "/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/tweet/$id.tsx", "../../app/modules/Tweet/Tweet.tsx", "../../app/modules/Tweet/components/TrendsForYou.tsx", "../../app/modules/Tweet/components/TweetContainer.tsx", "../../app/modules/Tweet/tweet.server.ts", "/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/tweet/$id/retweets.tsx", "/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/tweet/$id/likes.tsx", "/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/tweet/$id/saves.tsx", "/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/explore.tsx", "../../app/modules/Explore/Explore.tsx", "/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/logout.tsx", "/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/index.tsx", "/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/feed.tsx", "../../app/modules/Feed/Feed.tsx", "../../app/modules/Feed/components/TrendsForYou.tsx", "../../app/modules/Feed/components/TweetSomething/TweetSomethings.tsx", "../../app/modules/Feed/components/TweetSomething/components/TweetSomethingButtonGroup/TweetSomethingButtonGroup.tsx", "../../app/modules/Feed/components/TweetSomething/components/TweetSomethingButtonGroup/PermissionsPopup.tsx", "../../app/modules/Feed/components/TweetSomething/components/TweetSomethingImagePreviews.tsx", "../../app/modules/Feed/components/TweetSomething/hooks/useResetTweet.ts", "../../app/modules/Feed/components/TweetSomething/hooks/useTweetSomethingForm.ts", "../../app/modules/Feed/feed.server.ts", "/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__start.tsx", "../../app/modules/Start/start.server.ts", "../../app/modules/Start/Login.tsx", "../../app/modules/Start/Register.tsx", "../../app/modules/Start/StartShell.tsx", "/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__start/register.tsx", "/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__start/login.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["import { createRequestHandler } from '@remix-run/netlify';\nimport * as build from '@remix-run/dev/server-build';\n\n/*\n * Returns a context object with at most 3 keys:\n *  - `netlifyGraphToken`: raw authentication token to use with Netlify Graph\n *  - `clientNetlifyGraphAccessToken`: For use with JWTs generated by\n *    `netlify-graph-auth`.\n *  - `netlifyGraphSignature`: a signature for subscription events. Will be\n *    present if a secret is set.\n */\nfunction getLoadContext(event, context) {\n  let rawAuthorizationString;\n  let netlifyGraphToken;\n\n  if (event.authlifyToken != null) {\n    netlifyGraphToken = event.authlifyToken;\n  }\n\n  let authHeader = event.headers['authorization'];\n  let graphSignatureHeader = event.headers['x-netlify-graph-signature'];\n\n  if (authHeader != null && /Bearer /gi.test(authHeader)) {\n    rawAuthorizationString = authHeader.split(' ')[1];\n  }\n\n  let loadContext = {\n    clientNetlifyGraphAccessToken: rawAuthorizationString,\n    netlifyGraphToken: netlifyGraphToken,\n    netlifyGraphSignature: graphSignatureHeader,\n  };\n\n  // Remove keys with undefined values\n  Object.keys(loadContext).forEach((key) => {\n    if (loadContext[key] == null) {\n      delete loadContext[key];\n    }\n  });\n\n  return loadContext;\n}\n\nexport const handler = createRequestHandler({\n  build,\n  getLoadContext,\n  mode: process.env.NODE_ENV,\n});\n", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "\nimport * as entryServer from \"/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/entry.server.tsx\";\nimport * as route0 from \"/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/root.tsx\";\nimport * as route1 from \"/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell.tsx\";\nimport * as route2 from \"/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/$username.tsx\";\nimport * as route3 from \"/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/$username/followers.tsx\";\nimport * as route4 from \"/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/$username/following.tsx\";\nimport * as route5 from \"/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/bookmarks.tsx\";\nimport * as route6 from \"/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/tweet/$id.tsx\";\nimport * as route7 from \"/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/tweet/$id/retweets.tsx\";\nimport * as route8 from \"/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/tweet/$id/likes.tsx\";\nimport * as route9 from \"/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/tweet/$id/saves.tsx\";\nimport * as route10 from \"/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/explore.tsx\";\nimport * as route11 from \"/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/logout.tsx\";\nimport * as route12 from \"/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/index.tsx\";\nimport * as route13 from \"/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__shell/feed.tsx\";\nimport * as route14 from \"/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__start.tsx\";\nimport * as route15 from \"/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__start/register.tsx\";\nimport * as route16 from \"/Users/taylorcantwell/Documents/Projects/trellothree/apps/remix/app/routes/__start/login.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/__shell\": {\n      id: \"routes/__shell\",\n      parentId: \"root\",\n      path: undefined,\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/__shell/$username\": {\n      id: \"routes/__shell/$username\",\n      parentId: \"routes/__shell\",\n      path: \":username\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/__shell/$username/followers\": {\n      id: \"routes/__shell/$username/followers\",\n      parentId: \"routes/__shell/$username\",\n      path: \"followers\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/__shell/$username/following\": {\n      id: \"routes/__shell/$username/following\",\n      parentId: \"routes/__shell/$username\",\n      path: \"following\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/__shell/bookmarks\": {\n      id: \"routes/__shell/bookmarks\",\n      parentId: \"routes/__shell\",\n      path: \"bookmarks\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/__shell/tweet/$id\": {\n      id: \"routes/__shell/tweet/$id\",\n      parentId: \"routes/__shell\",\n      path: \"tweet/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/__shell/tweet/$id/retweets\": {\n      id: \"routes/__shell/tweet/$id/retweets\",\n      parentId: \"routes/__shell/tweet/$id\",\n      path: \"retweets\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/__shell/tweet/$id/likes\": {\n      id: \"routes/__shell/tweet/$id/likes\",\n      parentId: \"routes/__shell/tweet/$id\",\n      path: \"likes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/__shell/tweet/$id/saves\": {\n      id: \"routes/__shell/tweet/$id/saves\",\n      parentId: \"routes/__shell/tweet/$id\",\n      path: \"saves\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/__shell/explore\": {\n      id: \"routes/__shell/explore\",\n      parentId: \"routes/__shell\",\n      path: \"explore\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/__shell/logout\": {\n      id: \"routes/__shell/logout\",\n      parentId: \"routes/__shell\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/__shell/index\": {\n      id: \"routes/__shell/index\",\n      parentId: \"routes/__shell\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/__shell/feed\": {\n      id: \"routes/__shell/feed\",\n      parentId: \"routes/__shell\",\n      path: \"feed\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/__start\": {\n      id: \"routes/__start\",\n      parentId: \"root\",\n      path: undefined,\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/__start/register\": {\n      id: \"routes/__start/register\",\n      parentId: \"routes/__start\",\n      path: \"register\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/__start/login\": {\n      id: \"routes/__start/login\",\n      parentId: \"routes/__start\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    }\n  };", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { LoaderFunction, MetaFunction } from '@remix-run/node';\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLocation,\n  useTransition,\n} from '@remix-run/react';\nimport { apiEndpoints, composeRequestInit, getCookie } from './helpers';\nimport { SpinnerLoader } from './modules/shared';\nimport styles from './styles/styles.css';\n\nexport function links() {\n  return [\n    { rel: 'stylesheet', href: styles },\n    {\n      rel: 'stylesheet',\n      href: 'https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,400;0,700;1,400;1,700&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap',\n    },\n  ];\n}\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'Tw1ttr',\n  viewport: 'width=device-width,initial-scale=1',\n});\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const cookie = getCookie(request);\n  return await fetch(apiEndpoints.auth.me, composeRequestInit({ cookie }));\n};\n\nexport default function App() {\n  const transition = useTransition();\n  const isTransitioning = transition.state === 'loading';\n\n  let shouldScroll = true;\n  const location = useLocation() as any;\n  if (location?.state && location?.state?.disableScroll === true) {\n    shouldScroll = false;\n  }\n\n  return (\n    <html\n      lang=\"en\"\n      className=\"bg-[#f5f5f5] relative min-h-screen\"\n    >\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"relative min-h-screen\">\n        <Outlet />\n        {shouldScroll ? <ScrollRestoration /> : null}\n        <Scripts />\n        <LiveReload />\n        {isTransitioning && (\n          <div className=\"fixed bottom-24 right-4 md:bottom-8 md:right-8\">\n            <SpinnerLoader />\n          </div>\n        )}\n      </body>\n    </html>\n  );\n}\n", "import dayjs from 'dayjs';\n\nexport function formatDate(date: Date): string {\n  return dayjs(date).format('ddd, MMM D, YYYY h:mm A');\n}\n", "export const composeRequestInit = <T>({\n  cookie,\n  body,\n  method = 'GET',\n  signal,\n}: {\n  method?: RequestInit['method'];\n  cookie?: string;\n  body?: T;\n  signal?: AbortSignal;\n}): RequestInit => {\n  return {\n    method,\n    signal,\n    headers: {\n      ...(cookie && { Cookie: cookie }),\n      'Content-Type': 'application/json',\n    },\n    credentials: 'include',\n    ...(body && { body: JSON.stringify(body) }),\n  };\n};\n\ntype RequestInitOptions = Parameters<typeof composeRequestInit>[0];\n\nexport const fetchRequest = async <T>(url: string, requestInitOptions: RequestInitOptions) => {\n  const requestInit = composeRequestInit(requestInitOptions);\n  const response = await fetch(url, requestInit);\n  return (await response.json()) as T;\n};\n", "export const unpackRequest = async (request: any) => {\n  const body = await request.formData();\n  const cookie = request.headers.get('Cookie');\n\n  return {\n    ...(cookie && { cookie: request.headers.get('Cookie') }),\n    ...Object.fromEntries(body),\n  };\n};\n\nexport const getCookie = (request: any) => {\n  return request.headers.get('Cookie');\n};\n", "const isDevelopment = process.env.NODE_ENV === 'development';\n\nexport const config = {\n  backend: {\n    url: isDevelopment ? 'http://localhost:4000/v1' : process.env.API_URL,\n  },\n};\n", "import { config } from '~/config';\n\nconst BASE_URL = config.backend.url;\n\nexport const apiEndpoints = {\n  tweets: {\n    createTweet: `${BASE_URL}/tweet`,\n    getHomeTweets: `${BASE_URL}/tweet/home`,\n    getProfile: (username: string) => `${BASE_URL}/tweet/user/${username}`,\n    getProfileTweets: (username: string) => `${BASE_URL}/user/${username}`,\n    getTweet: (tweetId: string) => `${BASE_URL}/tweet/${tweetId}`,\n    getTweetById: (tweetId: string) => `${BASE_URL}/tweet/${tweetId}`,\n  },\n  comments: {\n    comment: (tweetId: string) => `${BASE_URL}/comment/${tweetId}`,\n    likeComment: (commentId: string) => `${BASE_URL}/comment/${commentId}/like`,\n  },\n  likes: {\n    likeTweet: (tweetId: string) => `${BASE_URL}/like/${tweetId}`,\n    getLikersForTweet: (tweetId: string) => `${BASE_URL}/like/${tweetId}/likers`,\n  },\n  retweets: {\n    retweet: (tweetId: string) => `${BASE_URL}/retweet/${tweetId}`,\n    getRetweetersForTweet: (tweetId: string) => `${BASE_URL}/retweet/${tweetId}/retweeters`,\n  },\n  follows: {\n    follow: (followeeId: string) => `${BASE_URL}/follow/${followeeId}`,\n    getFollowers: (username: string) => `${BASE_URL}/follow/followers/${username}`,\n    getFollowees: (username: string) => `${BASE_URL}/follow/followees/${username}`,\n  },\n  saves: {\n    getBookmarks: `${BASE_URL}/save`,\n    saveTweet: (tweetId: string) => `${BASE_URL}/save/${tweetId}`,\n    getSaversForTweet: (tweetId: string) => `${BASE_URL}/save/${tweetId}/savers`,\n  },\n  auth: {\n    login: `${BASE_URL}/auth/login`,\n    register: `${BASE_URL}/auth/register`,\n    logout: `${BASE_URL}/auth/logout`,\n    me: `${BASE_URL}/user/me`,\n  },\n  cloudinary: {\n    upload: `${BASE_URL}/cloudinary/upload`,\n  },\n  profile: {\n    update: `${BASE_URL}/profile/update`,\n  },\n};\n", "export const apiEndpointsClient = {\n  cloudinary: {\n    // upload: `https://tw1ttr.up.railway.app/v1/cloudinary/upload`,\n    upload: `http://localhost:4000/v1/cloudinary/upload`,\n  },\n};\n", "export const links = {\n  profile: (username: string) => `/${username}`,\n  tweet: (tweetId: string) => `/tweet/${tweetId}`,\n  home: '/feed',\n  explore: '/explore',\n  bookmarks: '/bookmarks',\n  login: '/login',\n  register: '/register',\n  dialogs: {\n    saves: 'saves',\n    likes: 'likes',\n    retweets: 'retweets',\n    following: 'following',\n    followers: 'followers',\n  },\n};\n", "export function stopPropagation(event: Event) {\n  event.stopPropagation();\n  event.nativeEvent.stopImmediatePropagation();\n}\n", "import { ArrowLeftIcon } from '@heroicons/react/solid';\nimport { useNavigate } from '@remix-run/react';\n\nexport function BackArrow({ className }: { className?: string }) {\n  const navigator = useNavigate();\n  return (\n    <div className=\"container px-5 mx-auto\">\n      <button\n        onClick={() => navigator(-1)}\n        className={`flex items-center !my-5 text-twitterBlue w-min hover:opacity-80 transition-colors ${className}`}\n      >\n        <ArrowLeftIcon className={`w-5 h-5 mr-3`} />\n        <p>Back</p>\n      </button>\n    </div>\n  );\n}\n", "import clsx from 'clsx';\nimport { BounceLoader } from '../Loaders';\n\ntype PrimaryButtonProps = {\n  children: React.ReactNode;\n  onClick?: () => void;\n  type?: 'button' | 'submit';\n  className?: string;\n  disabled?: boolean;\n  loading?: boolean;\n};\n\nexport function PrimaryButton({\n  children,\n  onClick,\n  className,\n  disabled,\n  type = 'button',\n  loading,\n}: PrimaryButtonProps) {\n  return (\n    <button\n      type={type}\n      disabled={disabled}\n      loading={loading}\n      onClick={onClick}\n      className={clsx(\n        `self-center py-2 text-xs md:text-sm text-white transition border-2 border-white rounded-lg md:px-7 px-3  bg-twitterBlue hover:text-twitterBlue hover:bg-white hover:border-twitterBlue`,\n        disabled &&\n          !loading &&\n          'opacity-50 hover:!text-white hover:border-white hover:bg-twitterBlue',\n        loading &&\n          'bg-transparent border-2 hover:bg-transparent border-twitterBlue hover:border-twitterBlue hover:border-2',\n        className,\n      )}\n    >\n      {loading ? <BounceLoader className={'mt-1'} /> : children}\n    </button>\n  );\n}\n", "import clsx from 'clsx';\n\nexport function BounceLoader({ className }: { className?: string }) {\n  return (\n    <div className={clsx('flex', className)}>\n      <div className={`${circleCommonClasses} mr-1 animate-bounce`}></div>\n      <div className={`${circleCommonClasses} mr-1 animate-bounce200`}></div>\n      <div className={`${circleCommonClasses} animate-bounce400`}></div>\n    </div>\n  );\n}\n\nconst circleCommonClasses = 'h-2.5 w-2.5 bg-twitterBlue rounded-full';\n", "export function SpinnerLoader() {\n  return (\n    <svg\n      role=\"status\"\n      className=\"w-12 h-12 mr-2 text-blue-100 animate-spin fill-twitterBlue\"\n      viewBox=\"0 0 100 101\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\n        fill=\"currentFill\"\n      />\n    </svg>\n  );\n}\n", "import { useFormContext, useIsSubmitting } from 'remix-validated-form';\nimport clsx from 'clsx';\n\nexport function SubmitButton({ className }: { className?: string }) {\n  const isSubmitting = useIsSubmitting();\n  const { isValid } = useFormContext();\n  const disabled = isSubmitting || !isValid;\n\n  return (\n    <button\n      type=\"submit\"\n      disabled={disabled}\n      className={clsx(className, disabled && '!bg-gray3')}\n    >\n      {isSubmitting ? 'Submitting...' : 'Submit'}\n    </button>\n  );\n}\n", "import { RefreshIcon } from '@heroicons/react/outline';\nimport { useNavigate } from '@remix-run/react';\nimport type { Comment, Tweet } from '@twitter-clone/shared';\nimport clsx from 'clsx';\nimport { TweetCardButtons } from './components/TweetCardButtons/TweetCardButtons';\nimport { TweetCardComments } from './components/TweetCardComments/TweetCardComments';\nimport { TweetCardContent } from './components/TweetCardContent';\nimport { TweetCardCounters } from './components/TweetCardCounters';\nimport { TweetCardImages } from './components/TweetCardImages';\nimport { TweetCardReply } from './components/TweetCardReply';\nimport { motion } from 'framer-motion';\nimport { useTweetReply } from './hooks/useTweetReply';\n\ntype TweetCardProps = {\n  tweet: Tweet & { isRetweet?: boolean };\n  comments?: Comment[];\n  variant?: 'profile' | 'open' | 'home';\n  idx?: number;\n};\n\nexport function TweetCard({\n  tweet: {\n    id: tweetId,\n    images,\n    likeCount,\n    commentCount,\n    saveCount,\n    retweetCount,\n    isLiked,\n    isSaved,\n    isRetweeted,\n    isRetweet,\n    content,\n    createdAt,\n    author,\n    avatarUrl,\n  },\n  variant,\n  comments,\n  idx,\n}: TweetCardProps) {\n  const navigate = useNavigate();\n  const { replyRef, focusReply, clearReply } = useTweetReply();\n  const isProfileTweets = variant === 'profile';\n  const isTweetOpen = variant === 'open';\n  const showRetweetedFlair = isProfileTweets && isRetweet;\n  const isFirstCard = idx === 0;\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 0.5 }}\n      className={clsx(!isFirstCard && 'mt-10')}\n    >\n      {showRetweetedFlair && (\n        <div className=\"flex mb-2 font-extralight text-twitterBlue\">\n          <RefreshIcon className=\"w-6 h-6 mr-1\" />\n          <p>Retweeted</p>\n        </div>\n      )}\n\n      <article\n        onClick={() => (isTweetOpen ? null : navigate(`/tweet/${tweetId}`))}\n        tabIndex={0}\n        className={clsx(\n          'bg-white shadow-sm cursor-pointer hover:bg-gray-400 p-7 rounded-2xl font-noto text-gray2',\n          isTweetOpen && '!cursor-default',\n        )}\n      >\n        <TweetCardContent\n          content={content}\n          author={author}\n          createdAt={createdAt}\n          avatarUrl={avatarUrl}\n        />\n\n        <TweetCardImages images={images} />\n\n        {isTweetOpen && (\n          <TweetCardCounters\n            likeCount={likeCount}\n            commentCount={commentCount}\n            saveCount={saveCount}\n            retweetCount={retweetCount}\n          />\n        )}\n\n        <TweetCardButtons\n          id={tweetId}\n          isLiked={isLiked}\n          isSaved={isSaved}\n          isRetweeted={isRetweeted}\n          likeCount={likeCount}\n          commentCount={commentCount}\n          saveCount={saveCount}\n          retweetCount={retweetCount}\n          isTweetOpen={isTweetOpen}\n          focusReply={focusReply}\n        />\n\n        {isTweetOpen && (\n          <>\n            <TweetCardReply\n              clearReply={clearReply}\n              focusReply={focusReply}\n              replyRef={replyRef}\n              tweetId={tweetId}\n            />\n\n            <TweetCardComments tweetComments={comments} />\n          </>\n        )}\n      </article>\n    </motion.div>\n  );\n}\n", "import { BookmarkIcon, ChatAltIcon, HeartIcon, RefreshIcon } from '@heroicons/react/outline';\nimport { useLocation, useNavigate } from '@remix-run/react';\nimport { TweetCardButton } from './components/TweetCardButton';\nimport { links } from '~/helpers';\n\ntype TweetCardButtonsProps = {\n  id: number;\n  isLiked: boolean;\n  isSaved: boolean;\n  isRetweeted: boolean;\n  likeCount: number;\n  commentCount: number;\n  saveCount: number;\n  retweetCount: number;\n  isTweetOpen: boolean;\n  focusReply: () => void;\n};\n\nexport function TweetCardButtons({\n  id,\n  isLiked,\n  isSaved,\n  isRetweeted,\n  likeCount,\n  commentCount,\n  saveCount,\n  retweetCount,\n  isTweetOpen,\n  focusReply,\n}: TweetCardButtonsProps) {\n  const tweetId = id.toString();\n  const navigator = useNavigate();\n  const location = useLocation();\n  const isTweetBeingViewed = location.pathname.includes(tweetId);\n\n  return (\n    <div className=\"py-1 border-t border-b border-grayHover text-gray\">\n      <div className=\"flex justify-between\">\n        <TweetCardButton\n          focusReply={focusReply}\n          Icon={ChatAltIcon}\n          label={isTweetOpen ? null : commentCount}\n          onClick={() => {\n            if (isTweetBeingViewed) return;\n            navigator(links.tweet(tweetId), { state: { commenting: true } });\n          }}\n        />\n        <TweetCardButton\n          tweetId={tweetId}\n          actionType=\"retweet\"\n          label={isTweetOpen ? null : retweetCount}\n          Icon={RefreshIcon}\n          isPressed={isRetweeted}\n        />\n        <TweetCardButton\n          tweetId={tweetId}\n          actionType=\"like\"\n          label={isTweetOpen ? null : likeCount}\n          Icon={HeartIcon}\n          isPressed={isLiked}\n        />\n        <TweetCardButton\n          tweetId={tweetId}\n          actionType=\"save\"\n          label={isTweetOpen ? null : saveCount}\n          Icon={BookmarkIcon}\n          isPressed={isSaved}\n        />\n      </div>\n    </div>\n  );\n}\n", "import clsx from 'clsx';\nimport { useFetcher } from '@remix-run/react';\nimport { useAuthGuard } from '~/hooks';\nimport { stopPropagation } from '~/helpers';\n\n//make overloaded\ntype TweetCardButtonProps = {\n  onClick?: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  label?: number | null;\n  Icon: (props: React.ComponentProps<'svg'>) => JSX.Element;\n  actionType?: 'like' | 'retweet' | 'save';\n  tweetId?: string;\n  isPressed?: boolean;\n  focusReply?: () => void;\n};\n\ntype MouseClickEvent = React.MouseEvent<HTMLButtonElement, MouseEvent>;\n\nexport function TweetCardButton({\n  Icon,\n  label,\n  actionType,\n  tweetId,\n  onClick,\n  isPressed,\n  focusReply,\n}: TweetCardButtonProps) {\n  const fetcher = useFetcher();\n  const disabled = fetcher.state !== 'idle';\n  const authGuard = useAuthGuard();\n\n  const clickHandler = onClick\n    ? (e: MouseClickEvent) => {\n        e.stopPropagation();\n        if (!focusReply) return null;\n        focusReply();\n\n        onClick(e);\n      }\n    : (e: MouseClickEvent) => {\n        stopPropagation(e);\n        if (!tweetId || !actionType) return null;\n        const user = authGuard();\n\n        if (!user) {\n          return null;\n        }\n\n        fetcher.submit({ tweetId, actionType }, { method: 'post' });\n      };\n\n  return (\n    <button\n      disabled={disabled}\n      onClick={clickHandler}\n      className={clsx(\n        disabled && 'opacity-50',\n        'flex items-center px-2  md:px-8 py-2 rounded-lg hover:bg-grayHover transition',\n      )}\n    >\n      <Icon className={clsx(isPressed && 'text-twitterBlue', 'inline w-6 h-6')} />\n      <span className=\"ml-3\">{label}</span>\n    </button>\n  );\n}\n", "import { useNavigate } from '@remix-run/react';\nimport { useOptionalUser } from './useOptionalUser';\nimport { links } from '~/helpers';\n\ntype useAuthGuardOptions = {\n  redirect?: boolean;\n  redirectUrl?: string;\n};\n\nexport function useAuthGuard(options: useAuthGuardOptions = {}) {\n  const user = useOptionalUser();\n  const navigator = useNavigate();\n  const redirect = options.redirect || true;\n  const redirectUrl = options.redirectUrl;\n  const defaultRedirectUrl = links.login;\n\n  return () => {\n    if (redirect && !user) {\n      navigator(redirectUrl || defaultRedirectUrl);\n    }\n\n    return user;\n  };\n}\n", "import { useMemo } from 'react';\nimport { useMatches } from '@remix-run/react';\n\nexport function useMatchesData(id: string): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id],\n  );\n  return route?.data;\n}\n", "import { useMatchesData } from './useMatchesData';\nimport { UserInfoMin } from '@twitter-clone/shared';\n\nexport function useOptionalUser(): UserInfoMin | undefined {\n  return useMatchesData('root');\n}\n", "import { useCallback, useState } from 'react';\nimport { apiEndpointsClient, composeRequestInit } from '~/helpers';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDropzone } from 'react-dropzone';\nimport { useMethods } from 'react-use';\nimport type { DropzoneOptions, FileError, FileRejection } from 'react-dropzone';\n\nexport type Image = {\n  id: string;\n  url: string;\n  previewUrl: string;\n  uploading: boolean;\n  abortUpload: () => void;\n};\n\ntype Options = DropzoneOptions & {\n  overwrite?: boolean;\n};\n\nexport function useImageUpload(options: Options) {\n  const [images, methods] = useMethods<ReturnType<typeof createMethods>, Image[]>(\n    createMethods,\n    [],\n  );\n  const [errors, setErrors] = useState<undefined | string>();\n\n  const onDrop = useCallback(\n    (acceptedFiles: File[], fileRejections: FileRejection[]) => {\n      setErrors('');\n\n      if (options.maxFiles && images.length >= options.maxFiles && !options.overwrite) {\n        setErrors('Max files reached');\n        return;\n      }\n\n      fileRejections.forEach((file: FileRejection) => {\n        file.errors.forEach((err: FileError) => {\n          if (err.code === 'file-too-large') {\n            setErrors(err.message);\n          }\n\n          if (err.code === 'file-invalid-type') {\n            setErrors(err.message);\n          }\n        });\n      });\n\n      acceptedFiles.forEach((file) => {\n        const abortController = new AbortController();\n        const id = uuidv4();\n\n        const image = {\n          id,\n          previewUrl: URL.createObjectURL(file),\n          uploading: true,\n          url: '',\n          abortUpload: () => {\n            abortController.abort();\n            methods.removeImage({ id });\n            setErrors('');\n          },\n        };\n\n        if (options?.overwrite) {\n          methods.replaceImage({ image });\n        } else {\n          methods.addImage({ image });\n        }\n\n        blobToBase64(file).then((base64) => {\n          return fetch(\n            apiEndpointsClient.cloudinary.upload,\n            composeRequestInit({\n              body: { data: base64 },\n              signal: abortController.signal,\n              method: 'POST',\n            }),\n          )\n            .then((res) => res.json())\n            .then(({ url }) => {\n              console.log('\uD83D\uDE80 ~ file: useImageUpload.ts ~ line 81 ~ .then ~ url', url);\n\n              methods.uploadComplete({ id: image.id, url });\n            })\n            .catch((err) => {\n              if (err.name !== 'AbortError') {\n                methods.removeImage({ id });\n              }\n            });\n        });\n      });\n    },\n    [images],\n  );\n\n  const dropzone = useDropzone({\n    onDrop,\n    accept: ['image/jpeg', 'image/png'],\n    noClick: true,\n    ...options,\n  });\n\n  const loading = images.some((image) => image.uploading);\n\n  if (options.maxFiles === 1) {\n    return { images: images[0], loading, errors, dropzone };\n  }\n\n  return { images, clearImages: methods.clearImages as () => void, loading, errors, dropzone };\n}\n\nfunction createMethods(state: Image[] | []) {\n  return {\n    removeImage({ id }: { id: string }) {\n      return [...state.filter((img) => img.id !== id)];\n    },\n    addImage({ image }: { image: Image }) {\n      return [...state, image];\n    },\n    uploadComplete({ id, url }: { id: string; url: string }) {\n      return [\n        ...state.map((image) => (image.id === id ? { ...image, uploading: false, url } : image)),\n      ];\n    },\n    replaceImage({ image }: { image: Image }) {\n      return [image];\n    },\n    clearImages() {\n      return [];\n    },\n  };\n}\n\nfunction blobToBase64(blob: Blob): Promise<string> {\n  return new Promise((resolve, _) => {\n    const reader = new FileReader();\n    reader.onloadend = () => resolve(reader.result as string | PromiseLike<string>);\n    reader.readAsDataURL(blob);\n  });\n}\n", "import { useNavigate } from '@remix-run/react';\nimport { formatDate, links, stopPropagation } from '~/helpers';\nimport type { Comment } from '@twitter-clone/shared';\nimport LikeButton from './components/TweetCardLikeButton';\nimport { motion } from 'framer-motion';\nimport { UserAvatar } from '~/modules/shared/UserAvatar';\n\nexport function TweetCardComments({ tweetComments }: { tweetComments: Comment[] }) {\n  const navigator = useNavigate();\n\n  if (tweetComments?.length === 0) {\n    return null;\n  }\n\n  return (\n    <>\n      {tweetComments.map(\n        ({ id: commentId, comment, username, createdAt, likeCount, isLiked, avatarUrl }) => {\n          return (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ duration: 0.5 }}\n              key={commentId}\n              className=\"flex py-5 border-t border-grayHover\"\n            >\n              <button\n                onClick={(e) => {\n                  stopPropagation(e);\n                  navigator(links.profile(username));\n                }}\n                className=\"flex mr-3 md:w-10 md:h-10 w-8 h-8\"\n              >\n                <UserAvatar\n                  username={username}\n                  avatarUrl={avatarUrl}\n                />\n              </button>\n              <div className=\"w-full\">\n                <div className=\"p-4 rounded-md bg-lightGray\">\n                  <button\n                    onClick={(e) => {\n                      stopPropagation(e);\n                      navigator(links.profile(username));\n                    }}\n                    className=\"mr-3 font-sans text-black transition-all hover:underline\"\n                  >\n                    {username}\n                  </button>\n                  <span className=\"text-sm font-noto text-gray4\">{formatDate(createdAt)}</span>\n                  <div className=\"py-3 font-noto\">{comment}</div>\n                  <LikeButton\n                    commentId={commentId}\n                    isLiked={isLiked}\n                    likeCount={likeCount}\n                  />\n                </div>\n              </div>\n            </motion.div>\n          );\n        },\n      )}\n    </>\n  );\n}\n", "import { HeartIcon } from '@heroicons/react/solid';\nimport clsx from 'clsx';\nimport { useFetcher } from '@remix-run/react';\nimport { useAuthGuard } from '~/hooks';\n\nexport default function TweetCardLikeButton({\n  likeCount,\n  commentId,\n  isLiked,\n}: {\n  likeCount: number;\n  commentId: number;\n  isLiked: boolean;\n}) {\n  const fetcher = useFetcher();\n  const authGuard = useAuthGuard();\n  const isFetching = fetcher.state !== 'idle';\n\n  return (\n    <div className=\"flex items-center gap-2 mt-1 text-sm transition-colors text-gray4\">\n      <button\n        disabled={isFetching}\n        onClick={() => {\n          const user = authGuard();\n\n          if (!user) {\n            return null;\n          }\n\n          fetcher.submit(\n            { commentId: commentId.toString(), actionType: 'likeComment' },\n            { method: 'post' },\n          );\n        }}\n        className={clsx({ 'opacity-50': isFetching }, 'flex items-center w-16 hover:text-gray3')}\n      >\n        <HeartIcon\n          className={clsx('inline w-5 h-5 mr-1', {\n            'text-red-400': isLiked,\n          })}\n        />\n        <span>{isLiked ? 'Liked' : 'Like'}</span>\n      </button>\n      <span className=\"w-16\">{likeCount} Likes</span>\n    </div>\n  );\n}\n", "import { Link } from '@remix-run/react';\nimport { stopPropagation } from '~/helpers';\nimport { AvatarPlaceHolder } from './AvatarPlaceHolder';\n\ntype UserAvatarProps = {\n  avatarUrl?: string;\n  className?: string;\n  username: string;\n};\n\nexport function UserAvatar({ avatarUrl, username }: UserAvatarProps) {\n  if (!username) {\n    return <AvatarPlaceHolder />;\n  }\n\n  return (\n    <Link\n      onClick={(e) => {\n        stopPropagation(e);\n      }}\n      to={'/' + username}\n      className=\"relative self-center flex-shrink-0 w-8 h-8 mr-5 rounded-md md:w-10 md:h-10 md:self-start\"\n    >\n      {avatarUrl ? (\n        <img\n          className=\"object-cover w-full h-full rounded-lg\"\n          src={avatarUrl}\n          alt=\"avatar\"\n        />\n      ) : (\n        <AvatarPlaceHolder />\n      )}\n    </Link>\n  );\n}\n", "import clsx from 'clsx';\n\nexport const AvatarPlaceHolder = ({ className }: { className?: string }) => {\n  return (\n    <div\n      className={clsx(\n        'flex items-center justify-center w-full h-full  transition-colors bg-opacity-50 rounded-lg bg-twitterBlue text-twitterBlue hover:bg-opacity-70 text-sm md:text-3xl',\n        className,\n      )}\n    >\n      ?\n    </div>\n  );\n};\n", "import { useNavigate } from '@remix-run/react';\nimport { formatDate, links, stopPropagation } from '~/helpers';\nimport { UserAvatar } from '../../UserAvatar';\nimport { useParams } from '@remix-run/react';\n\ntype TweetCardContentProps = {\n  content: string;\n  createdAt: Date;\n  author: string;\n  avatarUrl: string;\n};\n\nexport function TweetCardContent({ createdAt, content, author, avatarUrl }: TweetCardContentProps) {\n  const navigator = useNavigate();\n  const { username } = useParams();\n\n  return (\n    <div>\n      <div className=\"flex\">\n        <UserAvatar\n          username={author}\n          avatarUrl={avatarUrl}\n        />\n\n        <div>\n          <button\n            onClick={(e) => {\n              stopPropagation(e);\n              if (username === author) {\n                return null;\n              }\n              navigator(links.profile(author));\n            }}\n            className=\"font-sans text-black transition-all cursor-pointer hover:underline\"\n          >\n            {author}\n          </button>\n\n          <p className=\"text-sm text-gray4\">{formatDate(createdAt)}</p>\n        </div>\n      </div>\n      <p className=\"py-4 font-extralight\">{content}</p>\n    </div>\n  );\n}\n", "import { Link } from '@remix-run/react';\nimport { links } from '~/helpers';\n\ntype TweetCardCountersProps = {\n  likeCount: number;\n  commentCount: number;\n  saveCount: number;\n  retweetCount: number;\n};\n\nexport function TweetCardCounters({\n  saveCount,\n  likeCount,\n  retweetCount,\n  commentCount,\n}: TweetCardCountersProps) {\n  const counters = [\n    {\n      count: retweetCount,\n      label: 'Retweets',\n      url: links.dialogs.retweets,\n    },\n    { count: likeCount, label: 'Likes', url: links.dialogs.likes },\n    { count: saveCount, label: 'Saves', url: links.dialogs.saves },\n  ];\n\n  return (\n    <div className=\"flex justify-end pt-5 pb-2 text-xs md:text-base text-gray4\">\n      <div className=\"mr-4\">\n        <span className=\"mr-2\">{commentCount}</span>\n        <span>Comments</span>\n      </div>\n      {counters.map(({ count, label, url }) => {\n        return (\n          <Link\n            state={{ disableScroll: true }}\n            to={url}\n            replace={true}\n            key={label}\n            className=\"mr-4 transition hover:text-gray3\"\n          >\n            <span className=\"mr-2\">{count}</span>\n            <span>{label}</span>\n          </Link>\n        );\n      })}\n    </div>\n  );\n}\n", "import type { TweetImage } from '@twitter-clone/shared';\n\nexport function TweetCardImages({ images }: { images?: TweetImage[] | [] }) {\n  if (!images || images.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"flex gap-4 mb-5 max-h-64 max-w-64\">\n      {images.map(({ tweetId, url }) => {\n        return (\n          <div\n            className=\"w-40 h-40\"\n            key={tweetId}\n          >\n            <img\n              alt=\"tweet images\"\n              key={tweetId}\n              src={url}\n              className=\"object-cover w-full h-full rounded-md\"\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n", "import { useFetcher, useLocation } from '@remix-run/react';\nimport clsx from 'clsx';\nimport React, { useEffect } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { useOptionalUser, useAuthGuard } from '~/hooks';\nimport { PrimaryButton } from '../../Buttons';\nimport { UserAvatar } from '../../UserAvatar';\n\ntype TweetCardReplyProps = {\n  tweetId: number;\n  replyRef: React.MutableRefObject<HTMLTextAreaElement | undefined>;\n  focusReply: () => void;\n  clearReply: () => void;\n};\n\nexport function TweetCardReply({ tweetId, replyRef, focusReply, clearReply }: TweetCardReplyProps) {\n  const fetcher = useFetcher();\n  const location = useLocation();\n  const { user } = useOptionalUser();\n  const authGuard = useAuthGuard();\n  const locationState = location.state as { commenting?: boolean };\n  const autoFocusCommentInput = locationState?.commenting;\n  const isFetching = fetcher.state !== 'idle';\n  const submittedReply = fetcher.type === 'done';\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const user = authGuard();\n\n    if (!user) {\n      return null;\n    }\n\n    const form = new FormData(e.target);\n    const comment = form.get('comment') as string;\n    if (!comment) return null;\n\n    fetcher.submit(\n      {\n        tweetId: tweetId.toString(),\n        comment,\n        actionType: 'comment',\n      },\n      { method: 'post' },\n    );\n  };\n\n  useEffect(() => {\n    if (autoFocusCommentInput) {\n      focusReply();\n    }\n  }, [focusReply, autoFocusCommentInput]);\n\n  useEffect(() => {\n    if (submittedReply) {\n      clearReply();\n    }\n  }, [clearReply, submittedReply]);\n\n  return (\n    <fetcher.Form\n      onSubmit={onSubmit}\n      className=\"flex my-3 justify-items-stretch\"\n    >\n      <div className=\"w-8 h-8 mr-3 md:w-10 md:h-10\">\n        <UserAvatar\n          avatarUrl={user?.profile?.avatarUrl}\n          username={user?.username}\n        />\n      </div>\n\n      <TextareaAutosize\n        className={clsx(\n          'flex-grow p-2 border rounded-md resize-none bg-lightGray border-grayHover transition',\n          isFetching && 'opacity-50 cursor-auto',\n        )}\n        ref={replyRef}\n        name=\"comment\"\n      />\n\n      <PrimaryButton\n        className=\" ml-1 md:ml-5 h-10 md:w-[96px]\"\n        loading={isFetching}\n        type=\"submit\"\n      >\n        Reply\n      </PrimaryButton>\n    </fetcher.Form>\n  );\n}\n", "import { useCallback, useRef } from 'react';\n\nexport function useTweetReply() {\n  const replyRef = useRef<HTMLInputElement>();\n\n  const focusReply = useCallback(() => {\n    if (replyRef.current) {\n      replyRef.current.focus();\n    }\n  }, [replyRef]);\n\n  const clearReply = useCallback(() => {\n    if (replyRef.current) {\n      replyRef.current.blur();\n      replyRef.current.value = '';\n    }\n  }, [replyRef]);\n\n  return { replyRef, focusReply, clearReply };\n}\n", "import { useField } from 'remix-validated-form';\n\ntype ValidatedInputProps = {\n  name: string;\n  className?: string;\n  label?: string;\n};\n\nexport function ValidatedInput({\n  name,\n  label,\n  className,\n  placeholder,\n  defaultValue,\n}: React.HTMLAttributes<HTMLInputElement> & ValidatedInputProps) {\n  const { error, getInputProps } = useField(name);\n  return (\n    <div className=\"flex flex-col\">\n      {label ? (\n        <label\n          htmlFor={name}\n          className=\"mt-5 mb-1\"\n        >\n          {label}\n        </label>\n      ) : null}\n      <input\n        defaultValue={defaultValue}\n        required\n        placeholder={placeholder}\n        className={className}\n        {...getInputProps({ id: name })}\n      />\n      <span className=\"h-2 mt-1 text-red-700\">{error}</span>\n    </div>\n  );\n}\n", "import clsx from 'clsx';\nimport { useState } from 'react';\n\ninterface AsideMenuProps {\n  items: { description: string; url: string }[];\n  ariaLabel: string;\n}\n\nexport function AsideMenu({ items, ariaLabel }: AsideMenuProps) {\n  const [active, setActive] = useState<string>('');\n\n  return (\n    <nav\n      aria-label={ariaLabel}\n      className=\"relative items-start hidden px-5 bg-white shadow-sm rounded-2xl h-60 py-7 md:flex md:flex-col md:justify-between \"\n    >\n      {items.map(({ description, url }) => {\n        const isActive = active === description;\n\n        return (\n          <button\n            aria-current={isActive ? 'page' : undefined}\n            onClick={() => setActive(description)}\n            key={description}\n            className={clsx(\n              isActive &&\n                'before:absolute before:w-1 before:h-7 before:left-0 before:rounded-2xl before:align-[50%] before:bg-twitterBlue',\n              commonStyles,\n            )}\n          >\n            {description}\n          </button>\n        );\n      })}\n    </nav>\n  );\n}\n\nconst commonStyles = 'flex justify-center py-3 text-sm text-gray3';\n", "export function PrimaryLayoutContainer({ children }: { children: JSX.Element[] }) {\n  return (\n    <div className=\"grid md:grid-cols-[1fr,3fr] gap-5 container p-5 mt-10 mx-auto md:p-0\">\n      {children}\n    </div>\n  );\n}\n", "import type { Tweet } from '@twitter-clone/shared';\nimport { TweetCard } from './TweetCard';\n\ntype TweetListProps = {\n  tweets: Tweet[];\n  variant?: 'profile' | 'home';\n};\n\nexport function TweetList({ tweets, variant = 'home' }: TweetListProps) {\n  if (!tweets || tweets.length === 0) {\n    return (\n      <div className=\"flex items-center justify-center h-full mt-10 text-twitterBlue\">\n        {message[variant]}\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {tweets.map((tweet) => {\n        const key = `${tweet.id}${tweet.isRetweet ? '-retweet' : ''}`;\n        return (\n          <TweetCard\n            key={key}\n            tweet={tweet}\n            variant={variant}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nconst message = {\n  profile: \"User hasn't posted or retweeted.\",\n  home: 'No tweets to display.',\n};\n", "import { motion } from 'framer-motion';\n\nexport function Fade({ children, className }: { className?: string; children: React.ReactNode }) {\n  return (\n    <motion.div\n      className={className}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      {children}\n    </motion.div>\n  );\n}\n", "import { apiEndpoints, composeRequestInit } from '../../helpers';\n\nexport async function likeTweetMutation(tweetId: string, cookie: string) {\n  return await fetch(\n    apiEndpoints.likes.likeTweet(tweetId),\n    composeRequestInit({ cookie, method: 'POST' }),\n  );\n}\n\nexport async function retweetMutation(tweetId: string, cookie: string) {\n  return await fetch(\n    apiEndpoints.retweets.retweet(tweetId),\n    composeRequestInit({ cookie, method: 'POST' }),\n  );\n}\n\nexport async function saveTweetMutation(tweetId: string, cookie: string) {\n  return await fetch(\n    apiEndpoints.saves.saveTweet(tweetId),\n    composeRequestInit({ cookie, method: 'POST' }),\n  );\n}\n\nexport async function followMutation(followeeId: string, cookie: string) {\n  return await fetch(\n    apiEndpoints.follows.follow(followeeId),\n    composeRequestInit({ cookie, method: 'POST' }),\n  );\n}\n", "import { Outlet } from '@remix-run/react';\nimport { NavBar, MobileFooter } from '~/modules/Shell';\n\nexport default function AppShell() {\n  return (\n    <>\n      <NavBar>\n        <Outlet />\n      </NavBar>\n      <MobileFooter />\n    </>\n  );\n}\n", "import { Link } from '@remix-run/react';\nimport type { UserInfoMin } from '@twitter-clone/shared';\nimport { links } from '~/helpers';\nimport { AvatarDropDown } from './AvatarDropDown';\nimport { NavigationLink } from './NavigationLink';\n\nexport function LoggedInNavigation({ user }: { user: UserInfoMin }) {\n  return (\n    <>\n      <div className=\"w-1/3\">\n        <Link\n          to={links.home}\n          className=\"text-2xl font-bold transition-colors text-twitterBlue hover:opacity-50\"\n        >\n          Tw1ttr\n        </Link>\n      </div>\n      <nav className=\"hidden w-1/3 md:block\">\n        <ul className=\"flex justify-between text-twitterGrey \">\n          {navLinks.map(({ label, to, restricted }) => (\n            <NavigationLink\n              key={label}\n              to={to}\n              label={label}\n              restricted={restricted}\n            />\n          ))}\n        </ul>\n      </nav>\n      <div className=\"flex justify-end w-1/3 cursor-pointer\">\n        <AvatarDropDown user={user} />\n      </div>\n    </>\n  );\n}\n\nconst navLinks = [\n  { to: links.home, label: 'Home' },\n  { to: links.explore, label: 'Explore' },\n  { to: links.bookmarks, label: 'Bookmarks', restricted: true },\n];\n", "import { ChevronDownIcon, GlobeIcon, LogoutIcon } from '@heroicons/react/outline';\nimport { Close, Content, Root, Trigger } from '@radix-ui/react-popover';\nimport { useFetcher, useNavigate } from '@remix-run/react';\nimport clsx from 'clsx';\nimport { links } from '~/helpers';\nimport type { UserInfoMin } from '@twitter-clone/shared';\n\nexport function AvatarDropDown({ user }: { user: UserInfoMin }) {\n  const fetcher = useFetcher();\n  const navigator = useNavigate();\n\n  return (\n    <Root>\n      <Trigger\n        className=\"justify-end\"\n        asChild\n      >\n        <button\n          className=\"flex items-center px-5 py-2 border border-white rounded-lg hover:border-twitterBlue\"\n          aria-label=\"main menu\"\n        >\n          <div className=\"relative w-10 h-10 mr-3\">\n            {user?.profile?.avatarUrl ? (\n              <img\n                className=\"object-cover w-full h-full rounded-lg\"\n                src={user?.profile?.avatarUrl}\n                alt=\"avatar\"\n              />\n            ) : (\n              <div className=\"flex items-center justify-center w-full h-full text-3xl bg-opacity-50 rounded-lg bg-twitterBlue text-twitterBlue\">\n                ?\n              </div>\n            )}\n          </div>\n          <div>{user.username}</div>\n          <ChevronDownIcon className=\"w-5 h-5\" />\n        </button>\n      </Trigger>\n\n      <Content className=\"w-56 p-3 mt-5 ml-auto text-sm bg-white border-2 shadow-sm rounded-xl border-grayHover animate-slideUpAndFade\">\n        <Close\n          onClick={() => navigator(links.profile(user.username))}\n          className={buttonStyles}\n        >\n          <GlobeIcon className=\"w-4 h-4 mr-2\" />\n          My Profile\n        </Close>\n        <div className=\"h-[1px] my-3 bg-gray4\" />\n        <Close\n          onClick={() =>\n            fetcher.submit({ actionType: 'logout' }, { method: 'post', action: '/logout' })\n          }\n          className={clsx(buttonStyles, 'text-red-900')}\n        >\n          <LogoutIcon className=\"w-4 h-4 mr-2\" />\n          Logout\n        </Close>\n      </Content>\n    </Root>\n  );\n}\n\nconst buttonStyles =\n  'w-full transition duration-200 flex items-center px-2 py-3 rounded-lg bg-grayHover hover:bg-gray4';\n", "import { NavLink, useNavigate } from '@remix-run/react';\nimport clsx from 'clsx';\nimport { useAuthGuard } from '~/hooks';\n\ninterface NavigationLinkProps {\n  label: string;\n  to: string;\n  className?: string;\n}\n\nexport function NavigationLink({ restricted, to, label, className }: NavigationLinkProps) {\n  const navigator = useNavigate();\n  const authGuard = useAuthGuard();\n\n  if (restricted) {\n    return (\n      <button\n        className={({ isActive }) => clsx({ 'text-twitterBlue': isActive }, className)}\n        onClick={() => {\n          const user = authGuard();\n\n          if (!user) {\n            return null;\n          }\n\n          navigator(to);\n        }}\n      >\n        {label}\n      </button>\n    );\n  }\n\n  return (\n    <NavLink\n      className={({ isActive }) => clsx({ 'text-twitterBlue': isActive }, className)}\n      to={to}\n    >\n      {label}\n    </NavLink>\n  );\n}\n", "import { NavigationLink } from './NavigationLink';\nimport { links } from '~/helpers';\n\nexport function LoggedOutNavigation() {\n  return (\n    <nav className=\"md:block\">\n      <ul className=\"flex justify-start text-twitterGrey \">\n        {navLinks.map(({ label, to }) => (\n          <NavigationLink\n            className=\"transition-colors hover:text-twitterBlue\"\n            key={label}\n            to={to}\n            label={label}\n          />\n        ))}\n      </ul>\n    </nav>\n  );\n}\n\nconst navLinks = [{ to: links.login, label: 'Sign In Or Register' }];\n", "import { useOptionalUser } from '~/hooks';\nimport { LoggedInNavigation } from './components/LoggedInNavigation';\nimport { LoggedOutNavigation } from './components/LoggedOutNavigation';\n\nexport function NavBar({ children }: { children: React.ReactNode }) {\n  const user = useOptionalUser();\n\n  return (\n    <>\n      <header className=\"sticky top-0 z-50 p-5 text-lg font-light bg-white shadow-sm md:p-3 translate text-gray3\">\n        <div className=\"container flex items-center justify-between h-10 mx-auto md:h-20\">\n          {user ? <LoggedInNavigation user={user} /> : <LoggedOutNavigation />}\n        </div>\n      </header>\n      {children}\n    </>\n  );\n}\n", "import { BookmarkIcon, EyeIcon, HomeIcon } from '@heroicons/react/solid';\nimport { NavLink } from '@remix-run/react';\nimport clsx from 'clsx';\nimport { links } from '~/helpers';\nimport { useAuthGuard } from '~/hooks';\n\nexport function MobileFooter() {\n  return (\n    <div className=\"fixed bottom-0 left-0 right-0 z-40 flex items-center h-20 bg-white shadow-[0px_-1px_2px_0px_#0000000d] md:hidden text-gray3 border-t-gray\">\n      <ul className=\"flex justify-between w-full\">\n        {mobileLinks.map(({ id, icon, to, restricted }) => (\n          <MobileLink\n            key={id}\n            Icon={icon}\n            to={to}\n            restricted={restricted}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nconst MobileLink = ({\n  Icon,\n  to,\n  restricted,\n}: {\n  to: string;\n  Icon: JSX.Element;\n  restricted: boolean;\n}) => {\n  const authGuard = useAuthGuard();\n\n  return (\n    <NavLink\n      className={({ isActive }) =>\n        clsx(\n          isActive && 'text-twitterBlue',\n          'w-1/3 py-2 mx-4 text-center rounded-lg hover:bg-grayHover',\n        )\n      }\n      to={to}\n      onClick={(e) => {\n        if (restricted) {\n          const user = authGuard();\n\n          if (!user) {\n            e.preventDefault();\n            return null;\n          }\n        }\n      }}\n    >\n      <div className=\"w-full\">\n        <Icon className=\"mx-auto w-7 h-7\" />\n      </div>\n    </NavLink>\n  );\n};\n\nconst mobileLinks = [\n  { id: 1, icon: HomeIcon, to: links.home },\n  { id: 2, icon: EyeIcon, to: links.explore },\n  { id: 3, icon: BookmarkIcon, to: links.bookmarks, restricted: true },\n];\n", "import { redirect } from '@remix-run/node';\nimport { apiEndpoints, composeRequestInit } from '~/helpers';\n\nexport async function logoutMutation(cookie: string) {\n  console.log('\uD83D\uDE80 ~ file: shell.server.ts ~ line 5 ~ logoutMutation ~ cookie', cookie);\n  await fetch(apiEndpoints.auth.logout, composeRequestInit({ cookie, method: 'POST' }));\n\n  return redirect('/login');\n}\n", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport invariant from 'tiny-invariant';\nimport { likeTweetMutation, retweetMutation, saveTweetMutation } from '~/modules/shared/api.server';\nimport { Profile, getProfileTweetsQuery, updateProfile } from '~/modules/Profile';\nimport { unpackRequest, getCookie } from '~/helpers';\nimport { followMutation } from '~/modules/shared';\n\nexport const action: ActionFunction = async ({ request }): Promise<any> => {\n  const { cookie, actionType, tweetId, followeeId, ...data } = await unpackRequest(request);\n\n  switch (actionType) {\n    case 'follow':\n      return await followMutation(followeeId, cookie);\n\n    case 'like':\n      return await likeTweetMutation(tweetId, cookie);\n\n    case 'retweet':\n      return await retweetMutation(tweetId, cookie);\n\n    case 'save':\n      return await saveTweetMutation(tweetId, cookie);\n\n    case 'updateProfile':\n      return await updateProfile(cookie, data);\n    default:\n      break;\n  }\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const cookie = getCookie(request);\n  const username = params.username;\n  invariant(username, `params.username is required`);\n\n  return await getProfileTweetsQuery(username, cookie);\n};\n\nexport default function ProfileRoute() {\n  return <Profile />;\n}\n", "import { Outlet, useLoaderData } from '@remix-run/react';\nimport type { Tweet, UserProfile } from '@twitter-clone/shared';\nimport { AsideMenu, PrimaryLayoutContainer, TweetList } from '~/modules/shared';\nimport { useOptionalUser } from '~/hooks';\nimport { ProfileBanner } from './components/ProfileBanner';\nimport { UpdateProfileBanner } from './components/UpdateProfileBanner';\n\ntype ProfileLoaderData = {\n  profile: UserProfile;\n  tweets: Tweet[];\n};\n\nexport function Profile() {\n  const { profile, tweets } = useLoaderData<ProfileLoaderData>();\n  console.log('\uD83D\uDE80 ~ file: Profile.tsx ~ line 15 ~ Profile ~ profile', profile);\n  const user = useOptionalUser();\n  const isViewingOwnProfile = user?.username === profile?.username;\n\n  return (\n    <div className=\"relative font-poppins\">\n      {isViewingOwnProfile ? (\n        <UpdateProfileBanner profile={profile} />\n      ) : (\n        <ProfileBanner profile={profile} />\n      )}\n      <PrimaryLayoutContainer>\n        <AsideMenu\n          ariaLabel=\"filter tweets\"\n          items={asideMenuItems}\n        />\n        <main className=\"self-start h-full -mt-10\">\n          <TweetList\n            tweets={tweets}\n            variant=\"profile\"\n          />\n        </main>\n      </PrimaryLayoutContainer>\n      <Outlet />\n    </div>\n  );\n}\n\nconst asideMenuItems = [\n  { description: 'Tweet', url: 'test' },\n  { description: 'Tweets & replies', url: 'test' },\n  { description: 'Media', url: 'test' },\n  { description: 'Likes', url: 'test' },\n];\n", "import { Link, useFetcher } from '@remix-run/react';\nimport type { UserProfile } from '@twitter-clone/shared';\nimport { PrimaryButton } from '~/modules/shared';\nimport { links } from '~/helpers';\nimport { useAuthGuard } from '~/hooks';\n\ntype ProfileBannerProps = {\n  profile: UserProfile;\n};\n\nexport function ProfileBanner({ profile }: ProfileBannerProps) {\n  const authGuard = useAuthGuard();\n  const fetcher = useFetcher();\n  const isFollowMutationLoading = fetcher.state !== 'idle';\n\n  return (\n    <>\n      <div className=\"relative h-64 bg-twitterBlue\">\n        {profile.bannerUrl ? (\n          <img\n            className=\"object-cover object-center w-full h-full\"\n            src={profile.bannerUrl}\n            alt=\"profile banner\"\n          />\n        ) : (\n          <div className=\"object-cover object-center w-full h-full\" />\n        )}\n      </div>\n      <div className=\"px-3\">\n        <div className=\"container relative flex justify-between p-6 mx-auto -mt-20 bg-white rounded-xl\">\n          <div className=\"flex flex-col justify-between w-full md:flex-row\">\n            <div className=\"relative self-center flex-shrink-0 w-40 h-40 -mt-32 rounded-lg md:self-start\">\n              {profile.avatarUrl ? (\n                <img\n                  className=\"object-cover w-full h-full rounded-lg bg-twitterBlue\"\n                  src={profile.avatarUrl}\n                  alt=\"profile avatar\"\n                />\n              ) : (\n                <div className=\"flex items-center justify-center w-full h-full text-6xl font-light transition-colors rounded-lg bg-gray4 text-twitterBlue\">\n                  ?\n                </div>\n              )}\n            </div>\n\n            <div className=\"w-full text-center md:ml-10 md:text-left\">\n              <div className=\"flex flex-col justify-center mt-5 mb-3 md:justify-start md:items-center md:mt-0 md:flex-row \">\n                <p className=\"mt-5 text-2xl font-semibold md:mt-0 md:mr-6\">{profile.username}</p>\n                <div className=\"flex justify-center\">\n                  <Link\n                    state={{ disableScroll: true }}\n                    replace={true}\n                    to={links.dialogs.following}\n                    className=\"flex mr-5 transition-colors hover:text-twitterBlue\"\n                  >\n                    <p className=\"mr-1\">{profile.followeeCount}</p>\n                    <p>Following</p>\n                  </Link>\n                  <Link\n                    state={{ disableScroll: true }}\n                    replace={true}\n                    to={links.dialogs.followers}\n                    className=\"flex transition-colors hover:text-twitterBlue\"\n                  >\n                    <p className=\"mr-1\">{profile.followerCount}</p>\n                    <p>Followers</p>\n                  </Link>\n                </div>\n              </div>\n              <div className=\"flex\">\n                <p className=\"max-w-sm mx-auto mb-6 text-lg font-light text-center md:text-left md:mx-0 md:max-w-lg text-gray3\">\n                  {profile.bio}\n                </p>\n              </div>\n            </div>\n\n            <PrimaryButton\n              disabled={isFollowMutationLoading}\n              onClick={() => {\n                const user = authGuard();\n\n                if (!user) {\n                  return null;\n                }\n\n                fetcher.submit(\n                  { followeeId: profile.id.toString(), actionType: 'follow' },\n                  { method: 'post' },\n                );\n              }}\n            >\n              {profile.isFollowing ? 'Following' : 'Follow'}\n            </PrimaryButton>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n", "import { PencilAltIcon } from '@heroicons/react/outline';\nimport { Link, useFetcher } from '@remix-run/react';\nimport type { UserProfile } from '@twitter-clone/shared';\nimport clsx from 'clsx';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { BounceLoader, Fade } from '~/modules/shared';\nimport { links } from '~/helpers';\nimport { useImageUpload } from '~/hooks/useImageUpload';\nimport { useUpdateProfile } from '../hooks/useUpdateProfile';\nimport { ImageUploadButton } from './ImageUploadButton';\n\ntype UpdateProfileBannerProps = {\n  profile: UserProfile;\n};\n\nexport function UpdateProfileBanner({ profile }: UpdateProfileBannerProps) {\n  const fetcher = useFetcher();\n  const isSavingProfile = fetcher.state !== 'idle';\n  const { profileForm, setProfileField, isFormValidated } = useUpdateProfile({\n    defaults: {\n      bio: profile.bio,\n    },\n  });\n\n  const {\n    images: bannerImage,\n    loading: loadingBanner,\n    dropzone: bannerUpload,\n    errors: bannerError,\n  } = useImageUpload({ maxFiles: 1, multiple: false, overwrite: true });\n\n  const {\n    images: uploadedAvatarImage,\n    loading: loadingProfile,\n    dropzone: profileUpload,\n    error: profileError,\n  } = useImageUpload({ maxFiles: 1, multiple: false, overwrite: true });\n\n  const isUploadingImages = loadingBanner || loadingProfile;\n  const hasProfileBeenUpdated =\n    profileForm.bio !== profile.bio || bannerImage?.url || uploadedAvatarImage?.url;\n  const isSubmissionDisabled = isUploadingImages || !isFormValidated;\n  const avatarImage = uploadedAvatarImage?.previewUrl || profile.avatarUrl;\n\n  return (\n    <>\n      <input {...bannerUpload.getInputProps()} />\n      <input {...profileUpload.getInputProps()} />\n      <AnimatePresence>\n        <div className=\"relative h-64 bg-twitterBlue\">\n          {bannerImage?.previewUrl || profile.bannerUrl ? (\n            <img\n              className=\"object-cover object-center w-full h-full\"\n              src={bannerImage?.previewUrl || profile.bannerUrl}\n              alt=\"profile banner\"\n            />\n          ) : (\n            <div className=\"object-cover object-center w-full h-full\" />\n          )}\n          <div className=\"absolute w-5 h-5 rounded-md bottom-[50%] left-[50%] translate-x-1/2\">\n            <ImageUploadButton\n              onClick={bannerUpload.open}\n              abort={bannerImage?.abortUpload}\n              loading={bannerImage?.uploading}\n            />\n            {bannerError ? <p className=\"mt-10 text-sm text-red-700\">{bannerError}</p> : null}\n          </div>\n        </div>\n        <div className=\"px-3\">\n          <div className=\"container relative flex justify-between p-6 mx-auto -mt-20 bg-white rounded-xl\">\n            <div className=\"flex flex-col justify-between w-full md:flex-row\">\n              <div className=\"relative self-center flex-shrink-0 w-40 h-40 -mt-32 rounded-lg md:self-start\">\n                {avatarImage ? (\n                  <img\n                    className=\"object-cover w-full h-full rounded-lg bg-twitterBlue\"\n                    src={avatarImage}\n                    alt=\"profile avatar\"\n                  />\n                ) : (\n                  <div className=\"flex items-center justify-center w-full h-full text-6xl font-light transition-colors rounded-lg bg-gray4 text-twitterBlue\">\n                    ?\n                  </div>\n                )}\n\n                <ImageUploadButton\n                  onClick={profileUpload.open}\n                  abort={uploadedAvatarImage?.abortUpload}\n                  loading={uploadedAvatarImage?.uploading}\n                />\n\n                {profileError && <Fade className=\"mt-2 text-sm text-red-700\">{profileError}</Fade>}\n              </div>\n\n              <div className=\"w-full text-center md:ml-10 md:text-left\">\n                <div className=\"flex flex-col justify-center mt-5 mb-3 md:justify-start md:items-center md:mt-0 md:flex-row \">\n                  <p className=\"p-1 mt-5 text-2xl font-semibold md:mt-0 md:mr-6\">\n                    {profile.username}\n                  </p>\n                  <div className=\"flex justify-center\">\n                    <Link\n                      to={links.dialogs.following}\n                      className=\"flex mr-5 transition-colors hover:text-twitterBlue\"\n                    >\n                      <p className=\"mr-1\">{profile.followeeCount}</p>\n                      <p>Following</p>\n                    </Link>\n                    <Link\n                      to={links.dialogs.followers}\n                      className=\"flex transition-colors hover:text-twitterBlue\"\n                    >\n                      <p className=\"mr-1\">{profile.followerCount}</p>\n                      <p>Followers</p>\n                    </Link>\n                  </div>\n                </div>\n                <div className=\"flex md:items-center\">\n                  <label\n                    className=\"hidden cursor-pointer md:block\"\n                    htmlFor=\"bio\"\n                  >\n                    <PencilAltIcon className=\"w-5 h-5 mr-2\" />\n                  </label>\n                  <input\n                    id=\"bio\"\n                    aria-label=\"update your bio\"\n                    value={profileForm.bio}\n                    name=\"bio\"\n                    placeholder=\"Add a bio...\"\n                    onChange={setProfileField}\n                    className=\"w-2/3 p-1 mx-auto text-lg font-light text-center md:text-left md:mx-0 text-gray3\"\n                  />\n                </div>\n                <div className=\"h-3 mt-3 text-xs text-red-700\">\n                  {profileForm.errors.bio ? (\n                    <motion.p\n                      initial={{ opacity: 0 }}\n                      animate={{ opacity: 1 }}\n                      exit={{ opacity: 0 }}\n                    >\n                      {profileForm.errors.bio}\n                    </motion.p>\n                  ) : (\n                    ''\n                  )}\n                </div>\n              </div>\n\n              {hasProfileBeenUpdated ? (\n                <Fade className=\"flex items-center justify-center w-full mt-5 md:mt-0 md:w-36 text-twitterBlue\">\n                  <button\n                    className={clsx(\n                      isSubmissionDisabled && 'opacity-50 cursor-auto',\n                      `transition-colors flex items-center justify-center cursor-pointer   text-twitterBlue`,\n                    )}\n                    disabled={isSubmissionDisabled}\n                    onClick={() => {\n                      fetcher.submit(\n                        {\n                          actionType: 'updateProfile',\n                          bio: profileForm.bio,\n                          ...(bannerImage?.url && { bannerUrl: bannerImage?.url }),\n                          ...(uploadedAvatarImage?.url && { avatarUrl: uploadedAvatarImage?.url }),\n                        },\n                        { method: 'post' },\n                      );\n                    }}\n                  >\n                    {isSavingProfile ? <BounceLoader /> : 'Save Profile Updates'}\n                  </button>\n                </Fade>\n              ) : (\n                <div className=\"w-36\" />\n              )}\n            </div>\n          </div>\n        </div>\n      </AnimatePresence>\n    </>\n  );\n}\n", "import { useState } from 'react';\n\nexport function useUpdateProfile({ defaults }) {\n  const { bio } = defaults;\n\n  const [profileForm, setUpdateForm] = useState({\n    bio,\n    profileImage: null,\n    errors: { username: null, bio: null },\n  });\n\n  const setProfileField = (e) => {\n    setUpdateForm({\n      ...profileForm,\n      [e.target.name]: e.target.value,\n      errors: {\n        ...profileForm.errors,\n        [e.target.name]: validateUpdateProfile(e.target.name, e.target.value),\n      },\n    });\n  };\n\n  return {\n    profileForm,\n    setProfileField,\n    isFormValidated: !Object.values(profileForm.errors).some((x) => !!x),\n  };\n}\n\nconst validateUpdateProfile = (name, value) => {\n  switch (name) {\n    case 'bio':\n      return validateBio(value);\n\n    default:\n      break;\n  }\n};\n\nconst validateBio = (bio: string) => {\n  if (typeof bio !== 'string' || bio.length < 3) {\n    return `Bio must be at least 3 characters long`;\n  }\n  if (bio.length > 50) {\n    return `Bio must be less than 50 characters long`;\n  }\n};\n", "import { XCircleIcon, CameraIcon } from '@heroicons/react/solid';\nimport clsx from 'clsx';\n\ntype ImageUploadButtonProps = {\n  onClick: () => void;\n  abort: () => void;\n  loading: boolean;\n};\n\nexport function ImageUploadButton({ onClick, loading = false, abort }: ImageUploadButtonProps) {\n  return (\n    <button\n      aria-label={loading ? 'Remove Image' : 'Add Image'}\n      onClick={loading ? abort : onClick}\n      className=\"absolute flex items-center justify-center w-10 h-10 transition border border-white rounded-full shadow-2xl cursor-pointer bottom-2 left-2 bg-slate-300 hover:border-twitterBlue\"\n    >\n      <div\n        className={clsx(\n          'absolute border-t-2 rounded-full w-14 h-14 border-transparent animate-spin transition-colors pointer-events-none',\n          loading && '!border-twitterBlue',\n        )}\n      />\n      {loading ? (\n        <div className=\"bg-[#0000008a] rounded-full absolute h-10 w-10 cursor-pointer grid place-content-center\">\n          <XCircleIcon className=\"w-6 h-6 text-white\" />\n        </div>\n      ) : (\n        <CameraIcon className=\"w-5 h-5 text-slate-600\" />\n      )}\n    </button>\n  );\n}\n", "import { fetchRequest, apiEndpoints, composeRequestInit } from '~/helpers';\n\nexport async function getProfileTweetsQuery(username: string, cookie: string) {\n  return await fetchRequest(apiEndpoints.tweets.getProfileTweets(username), { cookie });\n}\n\nexport async function getFollowers(username: string, cookie: string) {\n  return await fetch(apiEndpoints.follows.getFollowers(username), composeRequestInit({ cookie }));\n}\n\nexport async function getFollowees(username: string, cookie: string) {\n  return await fetch(apiEndpoints.follows.getFollowees(username), composeRequestInit({ cookie }));\n}\n\nexport async function updateProfile(\n  cookie: string,\n  body: { bio: string; avatarUrl: string; bannerUrl: string },\n) {\n  return await fetch(\n    apiEndpoints.profile.update,\n    composeRequestInit({ cookie, method: 'PATCH', body }),\n  );\n}\n", "import { type LoaderFunction } from '@remix-run/node';\nimport { useLoaderData, useParams } from '@remix-run/react';\nimport invariant from 'tiny-invariant';\nimport { getFollowers } from '~/modules/Profile';\nimport { UserDialog } from '~/modules/shared/UserDialog';\nimport { getCookie } from '~/helpers';\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const cookie = getCookie(request);\n  const username = params.username;\n  invariant(username, `params.username is required`);\n\n  return await getFollowers(username, cookie);\n};\n\nexport default function Followers() {\n  const followers = useLoaderData();\n  const { username } = useParams();\n  invariant(username, `params.username is required`);\n\n  return (\n    <UserDialog\n      username={username}\n      variant=\"followers\"\n      users={followers}\n    />\n  );\n}\n", "import { Close, Content, Portal, Root } from '@radix-ui/react-dialog';\nimport { useNavigate } from '@remix-run/react';\nimport { UserCardList } from './components/UserCardList';\nimport type { UserInfoBasic } from '@twitter-clone/shared';\n\ntype UserDialogVariants = 'saves' | 'followers' | 'following' | 'likes' | 'retweets';\n\ntype UserDialogProps = {\n  username?: string;\n  variant: UserDialogVariants;\n  users: UserInfoBasic[];\n};\n\nexport function UserDialog({ username = '', variant, users }: UserDialogProps) {\n  console.log('\uD83D\uDE80 ~ file: UserDialog.tsx ~ line 15 ~ UserDialog ~ users', users);\n  const navigator = useNavigate();\n\n  return (\n    <Root\n      defaultOpen={true}\n      onOpenChange={() => navigator('..', { replace: true, state: { disableScroll: true } })}\n    >\n      <Portal>\n        <Content className=\"flex items-center justify-center \">\n          <div className=\"fixed flex flex-col w-full max-w-md p-5 mx-auto transform -translate-x-1/2 -translate-y-1/2 bg-transparent md:max-w-3xl lg:max-w-4xl sm:rounded-3xl left-1/2 top-1/2\">\n            <div className=\"p-5 bg-white border-2 rounded-lg shadow-md border-twitterBlue animate-fade\">\n              <div className=\"flex items-center justify-between mb-5 text-twitterBlue\">\n                <div>{composeDialogTitle(variant, username)}</div>\n                <Close className=\"flex flex-col items-center justify-center text-gray-100 duration-200 bg-gray-900 bg-opacity-50 outline-none cursor-pointer hover:bg-opacity-100 lg:bg-transparent lg:hover:opacity-30\">\n                  Close\n                </Close>\n              </div>\n              <UserCardList users={users} />\n            </div>\n          </div>\n        </Content>\n      </Portal>\n    </Root>\n  );\n}\n\nfunction composeDialogTitle(variant: UserDialogVariants, username: string) {\n  return {\n    retweets: `Retweeted By:`,\n    likes: 'Liked By:',\n    saves: 'Saved by:',\n    followers: `${username} is followed by:`,\n    following: `${username} is following:`,\n  }[variant];\n}\n", "import type { UserInfoBasic } from '@twitter-clone/shared';\nimport { Link, useFetcher } from '@remix-run/react';\nimport { PrimaryButton, UserAvatar } from '~/modules/shared';\nimport { useAuthGuard } from '~/hooks';\n\ntype UserCardProps = Omit<UserInfoBasic, 'id'>;\n\nexport function UserCard({ user }: UserCardProps) {\n  const authGuard = useAuthGuard();\n  const fetcher = useFetcher();\n\n  return (\n    <div className=\"py-5 bg-white border-t border-b border-gray4\">\n      <div className=\"flex items-start\">\n        <UserAvatar\n          username={user.username}\n          avatarUrl={user.avatarUrl}\n        />\n        <div className=\"flex\">\n          <div className=\"flex flex-col justify-between mr-3\">\n            <Link\n              className=\"transition-colors hover:text-twitterBlue\"\n              to={'/' + user.username}\n            >\n              {user.username}\n            </Link>\n            <div>{user.followerCount} followers</div>\n          </div>\n        </div>\n        {/* <PrimaryButton\n          onClick={() => {\n            const loggedInUser = authGuard();\n\n            if (!loggedInUser) {\n              return null;\n            }\n\n            fetcher.submit(\n              { followeeId: user.id.toString(), actionType: 'follow' },\n              { method: 'post', action: '/tweet' },\n            );\n          }}\n          className=\"ml-auto\"\n        >\n          Follow\n        </PrimaryButton> */}\n      </div>\n      <div className=\"mt-5\">{user.bio}</div>\n    </div>\n  );\n}\n", "import { UserCard } from './UserCard';\nimport type { UserInfoBasic } from '@twitter-clone/shared';\n\ntype UserCardListProps = {\n  users: UserInfoBasic[];\n};\n\nexport function UserCardList({ users }: UserCardListProps) {\n  if (!users || users.length === 0) {\n    return <p className=\"mx-auto\">Nothing to show</p>;\n  }\n  return (\n    <>\n      {users?.map((user) => (\n        <UserCard\n          key={user.id}\n          user={user}\n        />\n      ))}\n    </>\n  );\n}\n", "import { useLoaderData, useParams } from '@remix-run/react';\nimport type { LoaderFunction } from 'index';\nimport invariant from 'tiny-invariant';\nimport { getFollowees } from '~/modules/Profile';\nimport { UserDialog } from '~/modules/shared/UserDialog';\nimport { getCookie } from '~/helpers';\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const cookie = getCookie(request);\n  const username = params.username;\n  invariant(username, `params.username is required`);\n\n  return await getFollowees(username, cookie);\n};\n\nexport default function Following() {\n  const users = useLoaderData();\n  const { username } = useParams();\n  invariant(username, `params.username is required`);\n\n  return (\n    <UserDialog\n      username={username}\n      variant=\"following\"\n      users={users}\n    />\n  );\n}\n", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { likeTweetMutation, retweetMutation, saveTweetMutation } from '~/modules/shared/api.server';\nimport { Bookmarks, bookmarkTweetsQuery } from '~/modules/Bookmarks';\nimport { getCookie, unpackRequest } from '~/helpers';\n\nexport const action: ActionFunction = async ({ request }): Promise<any> => {\n  const { cookie, actionType, tweetId } = await unpackRequest(request);\n\n  switch (actionType) {\n    case 'like':\n      return await likeTweetMutation(tweetId, cookie);\n\n    case 'retweet':\n      return await retweetMutation(tweetId, cookie);\n\n    case 'save':\n      return await saveTweetMutation(tweetId, cookie);\n    default:\n      break;\n  }\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const cookie = getCookie(request);\n  return await bookmarkTweetsQuery(cookie);\n};\n\nexport default function BookmarkRoute() {\n  return <Bookmarks />;\n}\n", "import { useLoaderData } from '@remix-run/react';\nimport type { Tweet } from '@twitter-clone/shared';\nimport { AsideMenu, PrimaryLayoutContainer, TweetList } from '~/modules/shared';\n\nexport function Bookmarks() {\n  const tweets = useLoaderData<Tweet[]>();\n\n  return (\n    <PrimaryLayoutContainer>\n      <AsideMenu\n        ariaLabel=\"filter tweets\"\n        items={asideMenuItems}\n      />\n      <main className=\"self-start h-full -mt-10\">\n        <TweetList tweets={tweets} />\n      </main>\n    </PrimaryLayoutContainer>\n  );\n}\n\nconst asideMenuItems = [\n  { description: 'Tweet', url: 'test' },\n  { description: 'Tweets & replies', url: 'test' },\n  { description: 'Media', url: 'test' },\n  { description: 'Likes', url: 'test' },\n];\n", "import { composeRequestInit, apiEndpoints } from '~/helpers';\n\nexport async function bookmarkTweetsQuery(cookie: string) {\n  return await fetch(apiEndpoints.saves.getBookmarks, composeRequestInit({ cookie }));\n}\n", "import { type ActionFunction, type LoaderFunction } from '@remix-run/node';\nimport {\n  followMutation,\n  likeTweetMutation,\n  retweetMutation,\n  saveTweetMutation,\n} from '~/modules/shared/api.server';\nimport { Tweet } from '~/modules/Tweet';\nimport { commentMutation, getTweetById, likeCommentMutation } from '~/modules/Tweet/tweet.server';\nimport { getCookie, unpackRequest } from '~/helpers';\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const cookie = getCookie(request);\n  return await getTweetById(params.id, cookie);\n};\n\nexport const action: ActionFunction = async ({ request }): Promise<any> => {\n  const { actionType, tweetId, commentId, followeeId, cookie, ...data } = await unpackRequest(\n    request,\n  );\n\n  switch (actionType) {\n    case 'follow':\n      return await followMutation(followeeId, cookie);\n\n    case 'like':\n      return await likeTweetMutation(tweetId, cookie);\n\n    case 'retweet':\n      return await retweetMutation(tweetId, cookie);\n\n    case 'save':\n      return await saveTweetMutation(tweetId, cookie);\n\n    case 'comment':\n      return await commentMutation(tweetId, cookie, data);\n\n    case 'likeComment':\n      return await likeCommentMutation(commentId, cookie);\n\n    default:\n      break;\n  }\n};\n\nexport default function TweetRoute() {\n  return <Tweet />;\n}\n", "import { useLoaderData } from '@remix-run/react';\nimport { BackArrow, TweetCard } from '~/modules/shared';\nimport { MobileFooter } from '../Shell/MobileFooter';\nimport { TrendsForYou } from './components/TrendsForYou';\nimport { TweetContainer } from './components/TweetContainer';\nimport { Outlet } from '@remix-run/react';\n\nexport function Tweet() {\n  const { tweet, comments } = useLoaderData();\n\n  return (\n    <>\n      <BackArrow />\n      <TweetContainer>\n        <TweetCard\n          comments={comments}\n          tweet={tweet}\n          variant=\"open\"\n          idx={0}\n        />\n        <TrendsForYou />\n      </TweetContainer>\n      <Outlet />\n    </>\n  );\n}\n", "export function TrendsForYou() {\n  return (\n    <div>\n      <div className=\"hidden p-5 bg-white rounded-lg shadow-sm md:block\">\n        <p className=\"text-sm border-b border-[#E0E0E0] h-10\">Trends For You</p>\n      </div>\n    </div>\n  );\n}\n", "export function TweetContainer({ children }: { children: React.ReactNode }) {\n  return <div className=\"grid md:grid-cols-[3fr,1fr] gap-5 container px-5 mx-auto\">{children}</div>;\n}\n", "import { json } from '@remix-run/node';\nimport { apiEndpoints, composeRequestInit } from '~/helpers';\n\nexport async function commentMutation(tweetId: string, cookie: string, body: RequestInit['body']) {\n  return await fetch(\n    apiEndpoints.comments.comment(tweetId),\n    composeRequestInit({ cookie, body, method: 'POST' }),\n  );\n}\n\nexport async function likeCommentMutation(commentId: string, cookie: string) {\n  return await fetch(\n    apiEndpoints.comments.likeComment(commentId),\n    composeRequestInit({ cookie, method: 'POST' }),\n  );\n}\n\nexport async function getTweetById(tweetId: string, cookie: string) {\n  const data = await fetch(\n    apiEndpoints.tweets.getTweetById(tweetId),\n    composeRequestInit({ cookie }),\n  );\n\n  const result = await data.json();\n\n  return json(result, {\n    headers: {\n      'Cache-Control': 'public, max-age=120',\n    },\n  });\n}\n\nexport async function getSaversForTweet(tweetId: string, cookie: string) {\n  return await fetch(apiEndpoints.saves.getSaversForTweet(tweetId), composeRequestInit({ cookie }));\n}\n\nexport async function getLikersForTweet(tweetId: string, cookie: string) {\n  return await fetch(apiEndpoints.likes.getLikersForTweet(tweetId), composeRequestInit({ cookie }));\n}\n\nexport async function getRetweetersForTweet(tweetId: string, cookie: string) {\n  return await fetch(\n    apiEndpoints.retweets.getRetweetersForTweet(tweetId),\n    composeRequestInit({ cookie }),\n  );\n}\n", "import { useLoaderData, useParams } from '@remix-run/react';\nimport type { LoaderFunction } from '@remix-run/server-runtime';\nimport invariant from 'tiny-invariant';\nimport { getRetweetersForTweet } from '~/modules/Tweet/tweet.server';\nimport { UserDialog } from '~/modules/shared/UserDialog';\nimport { getCookie } from '~/helpers';\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const cookie = getCookie(request);\n  const tweetId = params.id;\n  invariant(tweetId, `params.slug is required`);\n\n  return await getRetweetersForTweet(tweetId, cookie);\n};\n\nexport default function RetweetsDialog() {\n  const retweets = useLoaderData();\n\n  return (\n    <UserDialog\n      variant=\"retweets\"\n      users={retweets}\n    />\n  );\n}\n", "import { useLoaderData, useParams } from '@remix-run/react';\nimport type { LoaderFunction } from '@remix-run/server-runtime';\nimport invariant from 'tiny-invariant';\nimport { getLikersForTweet } from '~/modules/Tweet/tweet.server';\nimport { UserDialog } from '~/modules/shared/UserDialog';\nimport { getCookie } from '~/helpers';\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const cookie = getCookie(request);\n  const tweetId = params.id;\n  invariant(tweetId, `params.slug is required`);\n\n  return await getLikersForTweet(tweetId, cookie);\n};\n\nexport default function LikesDialog() {\n  const likes = useLoaderData();\n\n  return (\n    <UserDialog\n      variant=\"likes\"\n      users={likes}\n    />\n  );\n}\n", "import { useLoaderData, useParams } from '@remix-run/react';\nimport type { LoaderFunction } from '@remix-run/server-runtime';\nimport invariant from 'tiny-invariant';\nimport { getSaversForTweet } from '~/modules/Tweet/tweet.server';\nimport { UserDialog } from '~/modules/shared/UserDialog';\nimport { getCookie } from '~/helpers';\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const cookie = getCookie(request);\n  const tweetId = params.id as string;\n  invariant(tweetId, `params.slug is required`);\n\n  return await getSaversForTweet(tweetId, cookie);\n};\n\nexport default function SavesDialog() {\n  const saves = useLoaderData();\n\n  return (\n    <UserDialog\n      variant=\"saves\"\n      users={saves}\n    />\n  );\n}\n", "import { Explore } from '~/modules/Explore';\n\nexport default function ExploreRoute() {\n  return <Explore />;\n}\n", "import { SearchIcon } from '@heroicons/react/solid';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { AsideMenu, PrimaryButton } from '~/modules/shared';\nimport { PrimaryLayoutContainer } from '~/modules/shared/Layouts/PrimaryLayoutContainer';\n\nexport function Explore() {\n  return (\n    <PrimaryLayoutContainer>\n      <AsideMenu\n        ariaLabel=\"filter tweets by categories\"\n        items={asideMenuItems}\n      />\n      <main className=\"self-start order-1 md:order-2\">\n        <div className=\"flex justify-between px-3 py-2 bg-white rounded-lg shadow-sm\">\n          <div className=\"flex items-center w-full\">\n            <SearchIcon className=\"w-5 h-5 text-gray3\" />\n\n            <TextareaAutosize\n              className=\"w-full p-2 mx-3 resize-none\"\n              placeholder=\"Search\"\n            />\n          </div>\n\n          <PrimaryButton>Search</PrimaryButton>\n        </div>\n        <div className=\"flex justify-center mt-5 text-twitterBlue\">\n          This feature hasn't been built yet.\n        </div>\n      </main>\n    </PrimaryLayoutContainer>\n  );\n}\n\nconst asideMenuItems = [\n  { description: 'Tweet', url: 'test' },\n  { description: 'Tweets & replies', url: 'test' },\n  { description: 'Media', url: 'test' },\n  { description: 'Likes', url: 'test' },\n];\n", "import type { ActionFunction } from '@remix-run/node';\nimport { logoutMutation } from '~/modules/Shell/shell.server';\nimport { getCookie, unpackRequest } from '~/helpers';\n\nexport const action: ActionFunction = async ({ request }) => {\n  const cookie = getCookie(request);\n\n  return await logoutMutation(cookie);\n};\n", "import { type LoaderFunction, redirect } from '@remix-run/node';\n\nexport const loader: LoaderFunction = async () => {\n  return redirect('/feed');\n};\n\nexport default function IndexRoute() {\n  return null;\n}\n", "import type { LoaderFunction, ActionFunction } from '@remix-run/node';\nimport { likeTweetMutation, retweetMutation, saveTweetMutation } from '~/modules/shared/api.server';\nimport { Home, homeTweetsQuery, createTweetMutation } from '~/modules/Feed';\nimport { unpackRequest, getCookie } from '~/helpers';\n\nexport const action: ActionFunction = async ({ request }): Promise<any> => {\n  const { actionType, tweetId, commentId, cookie, ...data } = await unpackRequest(request);\n\n  switch (actionType) {\n    case 'like':\n      return await likeTweetMutation(tweetId, cookie);\n\n    case 'retweet':\n      return await retweetMutation(tweetId, cookie);\n\n    case 'save':\n      return await saveTweetMutation(tweetId, cookie);\n\n    case 'create':\n      return await createTweetMutation(cookie, data);\n\n    default:\n      break;\n  }\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const cookie = getCookie(request);\n  return await homeTweetsQuery(cookie);\n};\n\nexport default function HomeRoute() {\n  return <Home />;\n}\n", "import { Outlet } from '@remix-run/react';\nimport type { Tweet } from '@twitter-clone/shared';\nimport { useLoaderData } from '@remix-run/react';\nimport { TweetList } from '~/modules/shared';\nimport { TrendsForYou } from './components/TrendsForYou';\nimport { TweetSomething } from './components/TweetSomething';\nimport { useOptionalUser } from '~/hooks';\n\nexport function Home() {\n  const tweets = useLoaderData<Tweet[]>();\n  const user = useOptionalUser();\n\n  return (\n    <div className=\"grid md:grid-cols-[3fr,1fr] gap-5 container p-5 mt-10 mx-auto md:p-0\">\n      <div className=\"self-start\">\n        <TweetSomething user={user} />\n        <TweetList tweets={tweets} />\n        <div className=\"flex justify-center py-10 text-red-500\">\n          No infinite scroll until this is added:{' '}\n          <a href=\"https://github.com/remix-run/remix/discussions/2775\">\n            https://github.com/remix-run/remix/discussions/2775\n          </a>\n        </div>\n      </div>\n      <TrendsForYou />\n      <Outlet />\n    </div>\n  );\n}\n", "export function TrendsForYou() {\n  return (\n    <div>\n      <div className=\"hidden p-5 bg-white rounded-lg shadow-sm md:block\">\n        <p className=\"text-sm border-b border-[#E0E0E0] h-10\">Trends For You</p>\n      </div>\n    </div>\n  );\n}\n", "import { Link, useFetcher } from '@remix-run/react';\nimport type { User } from '@twitter-clone/prisma';\nimport clsx from 'clsx';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { useAuthGuard, useImageUpload } from '~/hooks';\nimport { UserAvatar } from '~/modules/shared';\nimport { TweetSomethingButtonGroup } from './components/TweetSomethingButtonGroup';\nimport { TweetSomethingImagePreviews } from './components/TweetSomethingImagePreviews';\nimport { useResetTweet } from './hooks/useResetTweet';\nimport { useTweetSomethingForm } from './hooks/useTweetSomethingForm';\n\nexport function TweetSomething({ user }: { user: User }) {\n  console.log('\uD83D\uDE80 ~ file: TweetSomethings.tsx ~ line 12 ~ TweetSomething ~ user', user);\n  const fetcher = useFetcher();\n  const {\n    images,\n    clearImages,\n    dropzone,\n    loading: uploadingImages,\n    errors,\n  } = useImageUpload({ maxFiles: 3 });\n\n  const authGuard = useAuthGuard({ redirect: true });\n\n  const {\n    tweetSomethingFormData: { content, replyPermissions },\n    setContent,\n    clearContent,\n    setReplyPermissions,\n    backspaceContent,\n  } = useTweetSomethingForm();\n\n  const tweetContentRef = useResetTweet(fetcher, clearContent, clearImages as () => void);\n  const isFetching = fetcher.state !== 'idle';\n  const tweetCharacterCount = content.length;\n\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (isFetching) {\n      return null;\n    }\n\n    const user = authGuard();\n    if (!user) {\n      return;\n    }\n\n    const imageIds = images.map(({ url }) => url);\n\n    fetcher.submit(\n      {\n        content,\n        replyPermissions,\n        ...(imageIds?.length > 0 && { imageIds }),\n        actionType: 'create',\n      } as unknown as FormData,\n      { method: 'post' },\n    );\n  };\n\n  return (\n    <div className=\"self-start p-5 bg-white shadow-sm b rounded-2xl\">\n      <div className=\"h-8 border-b border-[#f2f2f2] mb-3\">\n        <h2 className=\"md:text-md text-sm  leading-5 text-[#4F4F4F]\">Tweet Something</h2>\n      </div>\n\n      <div className=\"flex\">\n        <Link\n          to={user ? user.username : '/login'}\n          className=\"relative w-10 h-10 md:w-14 md:h-14\"\n        >\n          <UserAvatar\n            avatarUrl={user?.profile?.avatarUrl}\n            username={user.username}\n          />\n        </Link>\n\n        <form\n          className=\"w-full ml-3 md:ml-5 sm:mt-0 md:mt-4\"\n          onSubmit={onSubmit}\n        >\n          <div\n            className={`border border-dashed border-white ${\n              dropzone.isDragActive ? 'border-gray3' : ''\n            }`}\n            {...dropzone.getRootProps()}\n          >\n            <input {...dropzone.getInputProps()} />\n            <TextareaAutosize\n              className={clsx(\n                'w-full h-24 pb-12 text-md md:text-lg font-light outline-none resize-none placeholder:md:text-lg placeholder-gray4',\n                isFetching && 'opacity-50 cursor-auto',\n              )}\n              placeholder=\"What\u2019s happening?\"\n              name=\"content\"\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n              onKeyDown={(e) => backspaceContent(e.key)}\n              ref={tweetContentRef}\n              disabled={isFetching}\n            />\n            <TweetSomethingImagePreviews images={images} />\n          </div>\n          {errors ? <p className=\"text-red-700\">{errors}</p> : null}\n\n          <TweetSomethingButtonGroup\n            tweetCharacterCount={tweetCharacterCount}\n            openImagePicker={dropzone.open}\n            setReplyPermissions={setReplyPermissions}\n            replyPermissions={replyPermissions}\n            isFetching={isFetching}\n            isUploadingImages={uploadingImages}\n          />\n        </form>\n      </div>\n    </div>\n  );\n}\n", "import { PhotographIcon } from '@heroicons/react/solid';\nimport type { ReplyPermission } from '@twitter-clone/prisma';\nimport clsx from 'clsx';\nimport { PrimaryButton } from '~/modules/shared';\nimport { useAuthGuard } from '~/hooks';\nimport PermissionsPopup from './PermissionsPopup';\n\ntype TweetSomethingButtons = {\n  openImagePicker: () => void;\n  setReplyPermissions: (replyPermission: ReplyPermission) => void;\n  replyPermissions: 'EVERYONE' | 'FOLLOWERS';\n  disabled?: boolean;\n  tweetCharacterCount: number;\n  isFetching: boolean;\n  isUploadingImages: boolean;\n};\n\nexport function TweetSomethingButtonGroup({\n  openImagePicker,\n  setReplyPermissions,\n  replyPermissions,\n  tweetCharacterCount,\n  isFetching,\n  isUploadingImages,\n}: TweetSomethingButtons) {\n  const authGuard = useAuthGuard();\n\n  return (\n    <div className=\"flex items-end justify-between\">\n      <div className=\"flex items-end\">\n        <button\n          type=\"button\"\n          onClick={() => {\n            const user = authGuard();\n\n            if (!user) {\n              return null;\n            }\n\n            openImagePicker();\n          }}\n        >\n          <PhotographIcon className=\"mr-5 cursor-pointer h-7 text-twitterBlue hover:text-blue-800\" />\n        </button>\n        <PermissionsPopup\n          setReplyPermissions={setReplyPermissions}\n          replyPermissions={replyPermissions}\n        />\n      </div>\n\n      <div className=\"flex items-end\">\n        <div\n          className={clsx('mr-5 hidden md:block', tweetCharacterCountStyling(tweetCharacterCount))}\n        >\n          {tweetCharacterCount} / 50\n        </div>\n\n        <PrimaryButton\n          disabled={isUploadingImages || tweetCharacterCount === 0}\n          type=\"submit\"\n          loading={isFetching}\n          className=\"h-10 w-[99px]\"\n        >\n          Tweet\n        </PrimaryButton>\n      </div>\n    </div>\n  );\n}\n\nconst tweetCharacterCountStyling = (count: number) => {\n  if (count === 50) {\n    return 'text-red-700';\n  }\n\n  if (count >= 40) {\n    return 'text-orange-600';\n  }\n\n  if (count >= 30) {\n    return 'text-orange-500';\n  }\n\n  if (count >= 15) {\n    return 'text-green-600';\n  }\n\n  if (count < 15) {\n    return 'text-green-700';\n  }\n};\n", "import { GlobeIcon, UserGroupIcon } from '@heroicons/react/outline';\nimport { Close, Content, Root, Trigger } from '@radix-ui/react-popover';\nimport type { ReplyPermission } from '@twitter-clone/prisma';\nimport clsx from 'clsx';\n\nconst FOLLOWERS = 'FOLLOWERS';\nconst EVERYONE = 'EVERYONE';\n\ninterface PermissionsPopupProps {\n  setReplyPermissions: (replyPermission: ReplyPermission) => void;\n  replyPermissions: 'EVERYONE' | 'FOLLOWERS';\n}\n\nexport default function PermissionsPopup({\n  setReplyPermissions,\n  replyPermissions,\n}: PermissionsPopupProps) {\n  const isEveryone = replyPermissions === EVERYONE;\n  const isFollowers = replyPermissions === FOLLOWERS;\n  const ActiveIcon = isEveryone ? GlobeIcon : UserGroupIcon;\n\n  return (\n    <Root>\n      <Trigger>\n        <div className=\"flex justify-between\">\n          <div className=\"flex items-center group\">\n            <ActiveIcon className=\"inline mr-2 cursor-pointer h-7 text-twitterBlue group-hover:text-blue-800\" />\n            <span className=\"hidden text-twitterBlue group-hover:text-blue-800 md:block\">\n              {isEveryone ? 'Everyone can reply' : 'Followers can only reply'}\n            </span>\n          </div>\n        </div>\n      </Trigger>\n\n      <Content className=\"p-3 mt-10 bg-white border-2 shadow-sm rounded-xl border-grayHover animate-slideUpAndFade\">\n        <p className=\"font-medium font-poppins\">Who can reply?</p>\n        <p className=\"font-light text text-gray3\">Choose who can reply to this Tweet.</p>\n\n        <div className=\"flex flex-col mt-2\">\n          <CloseButton\n            type={isEveryone}\n            Icon={GlobeIcon}\n            label=\"Everyone\"\n            onClick={() => setReplyPermissions(EVERYONE)}\n          />\n\n          <CloseButton\n            type={isFollowers}\n            Icon={UserGroupIcon}\n            label=\"People You Follow\"\n            onClick={() => setReplyPermissions(FOLLOWERS)}\n          />\n        </div>\n      </Content>\n    </Root>\n  );\n}\n\nconst CloseButton = ({\n  type,\n  Icon,\n  label,\n  onClick,\n}: {\n  type: boolean;\n  Icon: React.ComponentType;\n  label: string;\n  onClick: () => void;\n}) => {\n  return (\n    <Close\n      aria-pressed={type}\n      className={clsx(\n        'flex px-2 py-4 mb-1 rounded-lg hover:bg-grayHover item-center',\n        type && 'bg-gray4 hover:bg-gray4',\n      )}\n      onClick={onClick}\n    >\n      <Icon className=\"w-6 h-6 mr-2\" />\n      {label}\n    </Close>\n  );\n};\n", "import { XCircleIcon } from '@heroicons/react/solid';\nimport clsx from 'clsx';\n\nexport function TweetSomethingImagePreviews({ images }) {\n  if (images.length < 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"flex mb-5 max-h-64 max-w-96\">\n      {images.map(({ id, previewUrl, abortUpload, uploading }) => {\n        return (\n          <div\n            className=\"relative\"\n            key={id}\n          >\n            <img\n              className=\"object-cover mr-5 rounded-lg max-w-64 max-h-64\"\n              src={previewUrl}\n              alt={'images to add to tweet'}\n            />\n\n            <button\n              type=\"button\"\n              aria-label=\"Remove image\"\n              className=\"bg-[#0000008a] rounded-full absolute h-10 w-10 top-5 left-5 cursor-pointer grid place-content-center\"\n              onClick={abortUpload}\n            >\n              <XCircleIcon className=\"w-6 h-6 text-white\" />\n            </button>\n\n            <div\n              className={clsx(\n                'absolute border-t-2 rounded-full w-14 h-14 top-3 left-3  border-transparent animate-spin transition-colors pointer-events-none',\n                uploading && '!border-twitterBlue',\n              )}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n", "import type { useFetcher } from '@remix-run/react';\nimport { useEffect, useRef } from 'react';\n\ntype Fetcher = ReturnType<typeof useFetcher>;\n\nexport function useResetTweet(fetcher: Fetcher, clearContent: () => void, clearImages: () => void) {\n  const submittedTweet = fetcher.type === 'done';\n  const tweetContentRef = useRef<HTMLTextAreaElement>(null);\n\n  useEffect(() => {\n    if (submittedTweet) {\n      tweetContentRef.current!.blur();\n      clearContent();\n      clearImages();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [submittedTweet]);\n\n  return tweetContentRef;\n}\n", "import { useMethods } from 'react-use';\n\ntype ReplyPermissions = 'EVERYONE' | 'FOLLOWERS';\ntype SetContentArgs = { content: string; errors: { content: string } };\n\nexport function useTweetSomethingForm() {\n  const [tweetSomethingFormData, actions] = useMethods(tweetSomethingReducer, {\n    content: '',\n    replyPermissions: 'EVERYONE',\n    errors: { content: '' },\n  });\n\n  const tweetCharacterCount = tweetSomethingFormData.content.length;\n\n  function setContent(value: string) {\n    if (tweetCharacterCount === 50) {\n      return null;\n    }\n\n    actions.setContent({\n      content: value,\n      errors: {\n        content: validateContent(value),\n      },\n    });\n  }\n\n  function backspaceContent(key: string) {\n    if (key === 'Backspace' && tweetCharacterCount === 50) {\n      actions.setContent({\n        content: tweetSomethingFormData.content.slice(0, -1),\n      });\n    }\n  }\n\n  function clearContent() {\n    actions.setContent({\n      content: '',\n      errors: {\n        content: '',\n      },\n    });\n  }\n\n  function setReplyPermissions(value: ReplyPermissions) {\n    actions.setReplyPermissions(value);\n  }\n\n  return {\n    tweetSomethingFormData,\n    setContent,\n    clearContent,\n    setReplyPermissions,\n    backspaceContent,\n  };\n}\n\nfunction tweetSomethingReducer(state: {\n  content: string;\n  replyPermissions: ReplyPermissions;\n  errors: { content: string };\n}) {\n  return {\n    setReplyPermissions(replyPermissions: ReplyPermissions) {\n      return { ...state, replyPermissions };\n    },\n\n    setContent({ content, errors }: SetContentArgs) {\n      return {\n        ...state,\n        content,\n        errors: {\n          ...state.errors,\n          ...errors,\n        },\n      };\n    },\n  };\n}\n\nfunction validateContent(content: string) {\n  if (typeof content !== 'string' || content.length < 3) {\n    return `Content must be at least 3 characters long`;\n  }\n  if (content.length > 50) {\n    return `Content must be less than 50 characters long`;\n  }\n}\n", "import { composeRequestInit, apiEndpoints } from '~/helpers';\n\nexport async function createTweetMutation(\n  cookie: string,\n  {\n    content,\n    replyPermissions,\n    imageIds,\n  }: { content: string; replyPermissions: string; imageIds: string },\n) {\n  //remix - This is a bit gross that we cant send arrays in formData\n  const imageUrls = imageIds ? imageIds.split(',') : null;\n\n  return await fetch(\n    apiEndpoints.tweets.createTweet,\n    composeRequestInit({\n      body: { content, imageUrls, replyPermissions },\n      cookie,\n      method: 'POST',\n    }),\n  );\n}\n\nexport async function homeTweetsQuery(cookie: string) {\n  return await fetch(apiEndpoints.tweets.getHomeTweets, composeRequestInit({ cookie }));\n}\n", "import type { LoaderFunction } from '@remix-run/node';\nimport { StartShell, authQuery } from '~/modules/Start';\nimport { getCookie } from '~/helpers';\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const cookie = getCookie(request);\n  return await authQuery(cookie);\n};\n\nexport default function Start() {\n  return <StartShell />;\n}\n", "import { redirect } from '@remix-run/node';\nimport type { LoaderFunction } from '@remix-run/node';\nimport { composeRequestInit, apiEndpoints, links } from '~/helpers';\n\ntype AuthCredentials = {\n  username: string;\n  password: string;\n};\n\nexport const registerMutation = async (registerCredentials: AuthCredentials) => {\n  const registerResult = await fetch(\n    apiEndpoints.auth.register,\n    composeRequestInit({ method: 'POST', body: registerCredentials }),\n  );\n\n  if (registerResult.status === 201) {\n    return redirect('/login?registered=true');\n  }\n\n  return registerResult;\n};\n\nexport const loginMutation = async (loginCredentials: AuthCredentials) => {\n  const loginResponse = await fetch(\n    apiEndpoints.auth.login,\n    composeRequestInit({ method: 'POST', body: loginCredentials }),\n  );\n\n  if (loginResponse.status === 201) {\n    return redirect(links.home, {\n      headers: {\n        'Set-Cookie': loginResponse.headers.get('Set-Cookie'),\n      },\n    });\n  }\n\n  return loginResponse;\n};\n\nexport const authQuery: LoaderFunction = async (cookie) => {\n  const user = await fetch(apiEndpoints.auth.me, composeRequestInit({ cookie }));\n\n  // if (user) {\n  //   return redirect(links.home);\n  // }\n\n  return user;\n};\n", "import { useActionData, useSearchParams } from '@remix-run/react';\nimport { withZod } from '@remix-validated-form/with-zod';\nimport { ValidatedForm } from 'remix-validated-form';\nimport { z } from 'zod';\nimport { Fade, SubmitButton, ValidatedInput } from '~/modules/shared';\n\nexport function Login() {\n  const [searchParams] = useSearchParams();\n  const loginResult = useActionData();\n  const hasRegistered = searchParams.get('registered');\n\n  return (\n    <Fade>\n      <ValidatedForm\n        method=\"post\"\n        action=\"/login\"\n        validator={loginValidator}\n        noValidate\n      >\n        <div className=\"flex flex-col mb-5\">\n          <ValidatedInput\n            className=\"px-3 py-1 text-black rounded-md\"\n            placeholder=\"Username\"\n            name=\"username\"\n            label=\"Username\"\n          />\n\n          <ValidatedInput\n            className=\"px-3 py-1 text-black rounded-md \"\n            placeholder=\"Password\"\n            name=\"password\"\n            label=\"Password\"\n          />\n        </div>\n\n        <div className=\"h-5 mb-1\">\n          {hasRegistered ? (\n            <span className=\"text-green-500\">Registered successfully. Now you can login.</span>\n          ) : (\n            <span className=\"text-red-500\">{loginResult?.message ? loginResult.message : ''}</span>\n          )}\n        </div>\n\n        <SubmitButton className=\"w-full py-2 mb-8 font-bold text-white bg-blue-500 rounded-3xl hover:bg-blue-700\" />\n      </ValidatedForm>\n    </Fade>\n  );\n}\n\nconst loginValidator = withZod(\n  z.object({\n    username: z\n      .string()\n      .nonempty('Username is required')\n      .min(5, 'Username should at least 5 characters')\n      .max(20, 'Username should have max 20 characters'),\n    password: z\n      .string()\n      .nonempty('Password is required')\n      .min(5, 'Password should at least 5 characters')\n      .max(20, 'Password should have max 20 characters'),\n  }),\n);\n", "import { withZod } from '@remix-validated-form/with-zod';\nimport { ValidatedForm } from 'remix-validated-form';\nimport { z } from 'zod';\nimport { SubmitButton, ValidatedInput, Fade } from '~/modules/shared';\nimport { useActionData } from '@remix-run/react';\n\nexport function Register() {\n  const registerResult = useActionData();\n\n  return (\n    <Fade>\n      <ValidatedForm\n        method=\"post\"\n        action=\"/register\"\n        validator={registerValidator}\n        noValidate\n      >\n        <div className=\"flex flex-col mb-5\">\n          <ValidatedInput\n            className=\"px-3 py-1 text-black rounded-md \"\n            placeholder=\"Username\"\n            name=\"username\"\n            label=\"Username\"\n          />\n\n          <ValidatedInput\n            className=\"px-3 py-1 text-black rounded-md \"\n            placeholder=\"Password\"\n            name=\"password\"\n            label=\"Password\"\n          />\n          <span className=\"h-5 mb-1 text-red-500\">\n            {registerResult?.message ? registerResult.message : ''}\n          </span>\n        </div>\n\n        <SubmitButton className=\"w-full py-2 mb-8 font-bold text-white bg-blue-500 rounded-3xl hover:bg-blue-700\" />\n      </ValidatedForm>\n    </Fade>\n  );\n}\n\nconst registerValidator = withZod(\n  z.object({\n    username: z\n      .string()\n      .nonempty('Username is required')\n      .min(5, 'Username should at least 5 characters')\n      .max(20, 'Username should have max 20 characters'),\n    password: z\n      .string()\n      .nonempty('Password is required')\n      .min(5, 'Password should at least 5 characters')\n      .max(20, 'Password should have max 20 characters'),\n  }),\n);\n", "import { NavLink, Outlet } from '@remix-run/react';\nimport clsx from 'clsx';\n\nexport function StartShell() {\n  return (\n    <div className=\"flex h-screen bg-black bg-gray-600\">\n      <div className=\"relative hidden w-1/2 h-full md:block\">\n        <div className=\"w-full h-full bg-twitterBlue\" />\n      </div>\n      <main className=\"flex justify-center w-full px-12 py-20 text-white md:justify-start md:w-1/2\">\n        <div className=\"max-w-sm\">\n          <p className=\"text-2xl font-bold transition-colors text-twitterBlue hover:opacity-50\">\n            Tw1ttr\n          </p>\n          <h1 className=\"mb-4 text-3xl font-bold\">Join Tw1ttr today.</h1>\n          <Outlet />\n          <div className=\"h-[1px] rounded-2xl bg-gray4 mb-7\" />\n          <NavLink\n            to=\"register\"\n            replace\n            className={({ isActive }) => clsx(commonStyles, isActive && activeFormStyle)}\n          >\n            <span className=\"block\">Register</span>\n          </NavLink>\n\n          <p className=\"my-2 text-center\">Or</p>\n\n          <NavLink\n            to=\"login\"\n            replace\n            className={({ isActive }) => clsx(commonStyles, isActive && activeFormStyle)}\n          >\n            Sign In\n          </NavLink>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nconst commonStyles =\n  'rounded-3xl w-full py-2 bg-transparent border md:mx-0 font-bold text-twitterBlue hover:text-white grid place-items-center';\n\nconst activeFormStyle = '!text-white !bg-blue-500 !cursor-default';\n", "import type { ActionFunction } from '@remix-run/node';\nimport { Register, registerMutation } from '~/modules/Start';\nimport { unpackRequest } from '~/helpers';\n\nexport const action: ActionFunction = async ({ request }): Promise<any> => {\n  const { username, password } = await unpackRequest(request);\n  return await registerMutation({ username, password });\n};\n\nexport default function RegisterRoute() {\n  return <Register />;\n}\n", "import { type ActionFunction } from '@remix-run/node';\nimport { Login, loginMutation } from '~/modules/Start';\nimport { unpackRequest } from '~/helpers';\n\nexport let action: ActionFunction = async ({ request }): Promise<any> => {\n  const { username, password } = await unpackRequest(request);\n\n  return await loginMutation({ username, password });\n};\n\nexport default function LoginRoute() {\n  return <Login />;\n}\n", "export default {'version':'3cf7b552','entry':{'module':'/build/entry.client-CS77XXM2.js','imports':['/build/_shared/chunk-5ULS4RFU.js','/build/_shared/chunk-KJJKQLBA.js','/build/_shared/chunk-4HOG6TMD.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-SXG7M5DV.js','imports':['/build/_shared/chunk-TTUG3QV2.js','/build/_shared/chunk-LNG6L6E6.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__shell':{'id':'routes/__shell','parentId':'root','path':undefined,'index':undefined,'caseSensitive':undefined,'module':'/build/routes/__shell-2NB42SRW.js','imports':['/build/_shared/chunk-GIG6BHGS.js','/build/_shared/chunk-4F233YQO.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__shell/$username':{'id':'routes/__shell/$username','parentId':'routes/__shell','path':':username','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__shell/$username-Y6CB2QSF.js','imports':['/build/_shared/chunk-MXGI4U43.js','/build/_shared/chunk-LRUYYE75.js','/build/_shared/chunk-GV7B3TC7.js','/build/_shared/chunk-5SYEG46C.js','/build/_shared/chunk-TTUG3QV2.js','/build/_shared/chunk-LNG6L6E6.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__shell/$username/followers':{'id':'routes/__shell/$username/followers','parentId':'routes/__shell/$username','path':'followers','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__shell/$username/followers-5OVI33XF.js','imports':['/build/_shared/chunk-C7MO5OAA.js','/build/_shared/chunk-4F233YQO.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__shell/$username/following':{'id':'routes/__shell/$username/following','parentId':'routes/__shell/$username','path':'following','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__shell/$username/following-ZMYFXVJ5.js','imports':['/build/_shared/chunk-C7MO5OAA.js','/build/_shared/chunk-4F233YQO.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__shell/bookmarks':{'id':'routes/__shell/bookmarks','parentId':'routes/__shell','path':'bookmarks','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__shell/bookmarks-T3A57KXB.js','imports':['/build/_shared/chunk-5SYEG46C.js','/build/_shared/chunk-TTUG3QV2.js','/build/_shared/chunk-LNG6L6E6.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__shell/explore':{'id':'routes/__shell/explore','parentId':'routes/__shell','path':'explore','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__shell/explore-UXRDWAJQ.js','imports':['/build/_shared/chunk-TTUG3QV2.js','/build/_shared/chunk-LNG6L6E6.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__shell/feed':{'id':'routes/__shell/feed','parentId':'routes/__shell','path':'feed','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__shell/feed-WNFVU544.js','imports':['/build/_shared/chunk-GV7B3TC7.js','/build/_shared/chunk-5SYEG46C.js','/build/_shared/chunk-TTUG3QV2.js','/build/_shared/chunk-LNG6L6E6.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__shell/index':{'id':'routes/__shell/index','parentId':'routes/__shell','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/__shell/index-MUYCVHJ5.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__shell/logout':{'id':'routes/__shell/logout','parentId':'routes/__shell','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__shell/logout-OAIYEPST.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__shell/tweet/$id':{'id':'routes/__shell/tweet/$id','parentId':'routes/__shell','path':'tweet/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__shell/tweet/$id-VCDSUB35.js','imports':['/build/_shared/chunk-SENF7XRN.js','/build/_shared/chunk-5SYEG46C.js','/build/_shared/chunk-TTUG3QV2.js','/build/_shared/chunk-LNG6L6E6.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__shell/tweet/$id/likes':{'id':'routes/__shell/tweet/$id/likes','parentId':'routes/__shell/tweet/$id','path':'likes','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__shell/tweet/$id/likes-QVTDGTW2.js','imports':['/build/_shared/chunk-C7MO5OAA.js','/build/_shared/chunk-4F233YQO.js','/build/_shared/chunk-LRUYYE75.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__shell/tweet/$id/retweets':{'id':'routes/__shell/tweet/$id/retweets','parentId':'routes/__shell/tweet/$id','path':'retweets','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__shell/tweet/$id/retweets-E5SWFA2P.js','imports':['/build/_shared/chunk-C7MO5OAA.js','/build/_shared/chunk-4F233YQO.js','/build/_shared/chunk-LRUYYE75.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__shell/tweet/$id/saves':{'id':'routes/__shell/tweet/$id/saves','parentId':'routes/__shell/tweet/$id','path':'saves','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__shell/tweet/$id/saves-G5I6MOUF.js','imports':['/build/_shared/chunk-C7MO5OAA.js','/build/_shared/chunk-4F233YQO.js','/build/_shared/chunk-LRUYYE75.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__start':{'id':'routes/__start','parentId':'root','path':undefined,'index':undefined,'caseSensitive':undefined,'module':'/build/routes/__start-PAWXDDZ6.js','imports':['/build/_shared/chunk-HYKFR3TO.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__start/login':{'id':'routes/__start/login','parentId':'routes/__start','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__start/login-QNJYJJH3.js','imports':['/build/_shared/chunk-TTUG3QV2.js','/build/_shared/chunk-LNG6L6E6.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__start/register':{'id':'routes/__start/register','parentId':'routes/__start','path':'register','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__start/register-XJEBCIZU.js','imports':['/build/_shared/chunk-TTUG3QV2.js','/build/_shared/chunk-LNG6L6E6.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-3CF7B552.js'};"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;;;ACCA,YAAuB;;;ADDvB,qBAAqC;;;AEArC;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AACA,mBAA4B;AAC5B,oBAA+B;AAEhB,uBACb,SACA,oBACA,iBACA,cACA;AACA,QAAM,SAAS,kCACb,oCAAC,0BAAD;AAAA,IAAa,SAAS;AAAA,IAAc,KAAK,QAAQ;AAAA;AAGnD,kBAAgB,IAAI,gBAAgB;AAEpC,SAAO,IAAI,SAAS,oBAAoB,QAAQ;AAAA,IAC9C,QAAQ;AAAA,IACR,SAAS;AAAA;AAAA;;;AClBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,qBASO;;;ACVP,mBAAkB;AAEX,oBAAoB,MAAoB;AAC7C,SAAO,0BAAM,MAAM,OAAO;AAAA;;;ACHrB,IAAM,qBAAqB,CAAI;AAAA,EACpC;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT;AAAA,MAMiB;AACjB,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,SAAS,iCACH,UAAU,EAAE,QAAQ,WADjB;AAAA,MAEP,gBAAgB;AAAA;AAAA,IAElB,aAAa;AAAA,KACT,QAAQ,EAAE,MAAM,KAAK,UAAU;AAAA;AAMhC,IAAM,eAAe,OAAU,KAAa,uBAA2C;AAC5F,QAAM,cAAc,mBAAmB;AACvC,QAAM,WAAW,MAAM,MAAM,KAAK;AAClC,SAAQ,MAAM,SAAS;AAAA;;;AC5BlB,IAAM,gBAAgB,OAAO,YAAiB;AACnD,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,SAAS,QAAQ,QAAQ,IAAI;AAEnC,SAAO,kCACD,UAAU,EAAE,QAAQ,QAAQ,QAAQ,IAAI,cACzC,OAAO,YAAY;AAAA;AAInB,IAAM,YAAY,CAAC,YAAiB;AACzC,SAAO,QAAQ,QAAQ,IAAI;AAAA;;;ACX7B,IAAM,gBAAgB;AAEf,IAAM,SAAS;AAAA,EACpB,SAAS;AAAA,IACP,KAAK,gBAAgB,6BAA6B,QAAQ,IAAI;AAAA;AAAA;;;ACFlE,IAAM,WAAW,OAAO,QAAQ;AAEzB,IAAM,eAAe;AAAA,EAC1B,QAAQ;AAAA,IACN,aAAa,GAAG;AAAA,IAChB,eAAe,GAAG;AAAA,IAClB,YAAY,CAAC,aAAqB,GAAG,uBAAuB;AAAA,IAC5D,kBAAkB,CAAC,aAAqB,GAAG,iBAAiB;AAAA,IAC5D,UAAU,CAAC,YAAoB,GAAG,kBAAkB;AAAA,IACpD,cAAc,CAAC,YAAoB,GAAG,kBAAkB;AAAA;AAAA,EAE1D,UAAU;AAAA,IACR,SAAS,CAAC,YAAoB,GAAG,oBAAoB;AAAA,IACrD,aAAa,CAAC,cAAsB,GAAG,oBAAoB;AAAA;AAAA,EAE7D,OAAO;AAAA,IACL,WAAW,CAAC,YAAoB,GAAG,iBAAiB;AAAA,IACpD,mBAAmB,CAAC,YAAoB,GAAG,iBAAiB;AAAA;AAAA,EAE9D,UAAU;AAAA,IACR,SAAS,CAAC,YAAoB,GAAG,oBAAoB;AAAA,IACrD,uBAAuB,CAAC,YAAoB,GAAG,oBAAoB;AAAA;AAAA,EAErE,SAAS;AAAA,IACP,QAAQ,CAAC,eAAuB,GAAG,mBAAmB;AAAA,IACtD,cAAc,CAAC,aAAqB,GAAG,6BAA6B;AAAA,IACpE,cAAc,CAAC,aAAqB,GAAG,6BAA6B;AAAA;AAAA,EAEtE,OAAO;AAAA,IACL,cAAc,GAAG;AAAA,IACjB,WAAW,CAAC,YAAoB,GAAG,iBAAiB;AAAA,IACpD,mBAAmB,CAAC,YAAoB,GAAG,iBAAiB;AAAA;AAAA,EAE9D,MAAM;AAAA,IACJ,OAAO,GAAG;AAAA,IACV,UAAU,GAAG;AAAA,IACb,QAAQ,GAAG;AAAA,IACX,IAAI,GAAG;AAAA;AAAA,EAET,YAAY;AAAA,IACV,QAAQ,GAAG;AAAA;AAAA,EAEb,SAAS;AAAA,IACP,QAAQ,GAAG;AAAA;AAAA;;;AC7CR,IAAM,qBAAqB;AAAA,EAChC,YAAY;AAAA,IAEV,QAAQ;AAAA;AAAA;;;ACHL,IAAM,QAAQ;AAAA,EACnB,SAAS,CAAC,aAAqB,IAAI;AAAA,EACnC,OAAO,CAAC,YAAoB,UAAU;AAAA,EACtC,MAAM;AAAA,EACN,SAAS;AAAA,EACT,WAAW;AAAA,EACX,OAAO;AAAA,EACP,UAAU;AAAA,EACV,SAAS;AAAA,IACP,OAAO;AAAA,IACP,OAAO;AAAA,IACP,UAAU;AAAA,IACV,WAAW;AAAA,IACX,WAAW;AAAA;AAAA;;;ACbR,yBAAyB,OAAc;AAC5C,QAAM;AACN,QAAM,YAAY;AAAA;;;ACFpB,mBAA8B;AAC9B,oBAA4B;AAErB,mBAAmB,EAAE,aAAqC;AAC/D,QAAM,YAAY;AAClB,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,UAAD;AAAA,IACE,SAAS,MAAM,UAAU;AAAA,IACzB,WAAW,qFAAqF;AAAA,KAEhG,oCAAC,4BAAD;AAAA,IAAe,WAAW;AAAA,MAC1B,oCAAC,KAAD,MAAG;AAAA;;;ACZX,mBAAiB;;;ACAjB,kBAAiB;AAEV,sBAAsB,EAAE,aAAqC;AAClE,SACE,oCAAC,OAAD;AAAA,IAAK,WAAW,yBAAK,QAAQ;AAAA,KAC3B,oCAAC,OAAD;AAAA,IAAK,WAAW,GAAG;AAAA,MACnB,oCAAC,OAAD;AAAA,IAAK,WAAW,GAAG;AAAA,MACnB,oCAAC,OAAD;AAAA,IAAK,WAAW,GAAG;AAAA;AAAA;AAKzB,IAAM,sBAAsB;;;ACZrB,yBAAyB;AAC9B,SACE,oCAAC,OAAD;AAAA,IACE,MAAK;AAAA,IACL,WAAU;AAAA,IACV,SAAQ;AAAA,IACR,MAAK;AAAA,IACL,OAAM;AAAA,KAEN,oCAAC,QAAD;AAAA,IACE,GAAE;AAAA,IACF,MAAK;AAAA,MAEP,oCAAC,QAAD;AAAA,IACE,GAAE;AAAA,IACF,MAAK;AAAA;AAAA;;;AFHN,uBAAuB;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,OAAO;AAAA,EACP;AAAA,GACqB;AACrB,SACE,oCAAC,UAAD;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,WAAW,0BACT,0LACA,YACE,CAAC,WACD,wEACF,WACE,2GACF;AAAA,KAGD,UAAU,oCAAC,cAAD;AAAA,IAAc,WAAW;AAAA,OAAa;AAAA;;;AGpCvD,kCAAgD;AAChD,mBAAiB;AAEV,sBAAsB,EAAE,aAAqC;AAClE,QAAM,eAAe;AACrB,QAAM,EAAE,YAAY;AACpB,QAAM,WAAW,gBAAgB,CAAC;AAElC,SACE,oCAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL;AAAA,IACA,WAAW,0BAAK,WAAW,YAAY;AAAA,KAEtC,eAAe,kBAAkB;AAAA;;;ACdxC,sBAA4B;AAC5B,qBAA4B;AAE5B,mBAAiB;;;ACHjB,qBAAkE;AAClE,oBAAyC;;;ACDzC,mBAAiB;AACjB,oBAA2B;;;ACD3B,oBAA4B;;;ACA5B,oBAAwB;AACxB,oBAA2B;AAEpB,wBAAwB,IAAiD;AAC9E,QAAM,iBAAiB;AAEvB,QAAM,QAAQ,2BACZ,MAAM,eAAe,KAAK,CAAC,WAAU,OAAM,OAAO,KAClD,CAAC,gBAAgB;AAEnB,SAAO,+BAAO;AAAA;;;ACPT,2BAAoD;AACzD,SAAO,eAAe;AAAA;;;AFKjB,sBAAsB,UAA+B,IAAI;AAC9D,QAAM,OAAO;AACb,QAAM,YAAY;AAClB,QAAM,YAAW,QAAQ,YAAY;AACrC,QAAM,cAAc,QAAQ;AAC5B,QAAM,qBAAqB,MAAM;AAEjC,SAAO,MAAM;AACX,QAAI,aAAY,CAAC,MAAM;AACrB,gBAAU,eAAe;AAAA;AAG3B,WAAO;AAAA;AAAA;;;AGrBX,oBAAsC;AAEtC,kBAA6B;AAC7B,4BAA4B;AAC5B,uBAA2B;AAepB,wBAAwB,SAAkB;AAC/C,QAAM,CAAC,QAAQ,WAAW,iCACxB,eACA;AAEF,QAAM,CAAC,QAAQ,aAAa;AAE5B,QAAM,SAAS,+BACb,CAAC,eAAuB,mBAAoC;AAC1D,cAAU;AAEV,QAAI,QAAQ,YAAY,OAAO,UAAU,QAAQ,YAAY,CAAC,QAAQ,WAAW;AAC/E,gBAAU;AACV;AAAA;AAGF,mBAAe,QAAQ,CAAC,SAAwB;AAC9C,WAAK,OAAO,QAAQ,CAAC,QAAmB;AACtC,YAAI,IAAI,SAAS,kBAAkB;AACjC,oBAAU,IAAI;AAAA;AAGhB,YAAI,IAAI,SAAS,qBAAqB;AACpC,oBAAU,IAAI;AAAA;AAAA;AAAA;AAKpB,kBAAc,QAAQ,CAAC,SAAS;AAC9B,YAAM,kBAAkB,IAAI;AAC5B,YAAM,KAAK;AAEX,YAAM,QAAQ;AAAA,QACZ;AAAA,QACA,YAAY,IAAI,gBAAgB;AAAA,QAChC,WAAW;AAAA,QACX,KAAK;AAAA,QACL,aAAa,MAAM;AACjB,0BAAgB;AAChB,kBAAQ,YAAY,EAAE;AACtB,oBAAU;AAAA;AAAA;AAId,UAAI,mCAAS,WAAW;AACtB,gBAAQ,aAAa,EAAE;AAAA,aAClB;AACL,gBAAQ,SAAS,EAAE;AAAA;AAGrB,mBAAa,MAAM,KAAK,CAAC,WAAW;AAClC,eAAO,MACL,mBAAmB,WAAW,QAC9B,mBAAmB;AAAA,UACjB,MAAM,EAAE,MAAM;AAAA,UACd,QAAQ,gBAAgB;AAAA,UACxB,QAAQ;AAAA,YAGT,KAAK,CAAC,QAAQ,IAAI,QAClB,KAAK,CAAC,EAAE,UAAU;AACjB,kBAAQ,IAAI,+DAAwD;AAEpE,kBAAQ,eAAe,EAAE,IAAI,MAAM,IAAI;AAAA,WAExC,MAAM,CAAC,QAAQ;AACd,cAAI,IAAI,SAAS,cAAc;AAC7B,oBAAQ,YAAY,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,KAMlC,CAAC;AAGH,QAAM,WAAW,uCAAY;AAAA,IAC3B;AAAA,IACA,QAAQ,CAAC,cAAc;AAAA,IACvB,SAAS;AAAA,KACN;AAGL,QAAM,UAAU,OAAO,KAAK,CAAC,UAAU,MAAM;AAE7C,MAAI,QAAQ,aAAa,GAAG;AAC1B,WAAO,EAAE,QAAQ,OAAO,IAAI,SAAS,QAAQ;AAAA;AAG/C,SAAO,EAAE,QAAQ,aAAa,QAAQ,aAA2B,SAAS,QAAQ;AAAA;AAGpF,uBAAuB,OAAqB;AAC1C,SAAO;AAAA,IACL,YAAY,EAAE,MAAsB;AAClC,aAAO,CAAC,GAAG,MAAM,OAAO,CAAC,QAAQ,IAAI,OAAO;AAAA;AAAA,IAE9C,SAAS,EAAE,SAA2B;AACpC,aAAO,CAAC,GAAG,OAAO;AAAA;AAAA,IAEpB,eAAe,EAAE,IAAI,OAAoC;AACvD,aAAO;AAAA,QACL,GAAG,MAAM,IAAI,CAAC,UAAW,MAAM,OAAO,KAAK,iCAAK,QAAL,EAAY,WAAW,OAAO,SAAQ;AAAA;AAAA;AAAA,IAGrF,aAAa,EAAE,SAA2B;AACxC,aAAO,CAAC;AAAA;AAAA,IAEV,cAAc;AACZ,aAAO;AAAA;AAAA;AAAA;AAKb,sBAAsB,MAA6B;AACjD,SAAO,IAAI,QAAQ,CAAC,SAAS,MAAM;AACjC,UAAM,SAAS,IAAI;AACnB,WAAO,YAAY,MAAM,QAAQ,OAAO;AACxC,WAAO,cAAc;AAAA;AAAA;;;AJvHlB,yBAAyB;AAAA,EAC9B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GACuB;AACvB,QAAM,UAAU;AAChB,QAAM,WAAW,QAAQ,UAAU;AACnC,QAAM,YAAY;AAElB,QAAM,eAAe,UACjB,CAAC,MAAuB;AACtB,MAAE;AACF,QAAI,CAAC;AAAY,aAAO;AACxB;AAEA,YAAQ;AAAA,MAEV,CAAC,MAAuB;AACtB,oBAAgB;AAChB,QAAI,CAAC,WAAW,CAAC;AAAY,aAAO;AACpC,UAAM,OAAO;AAEb,QAAI,CAAC,MAAM;AACT,aAAO;AAAA;AAGT,YAAQ,OAAO,EAAE,SAAS,cAAc,EAAE,QAAQ;AAAA;AAGxD,SACE,oCAAC,UAAD;AAAA,IACE;AAAA,IACA,SAAS;AAAA,IACT,WAAW,0BACT,YAAY,cACZ;AAAA,KAGF,oCAAC,MAAD;AAAA,IAAM,WAAW,0BAAK,aAAa,oBAAoB;AAAA,MACvD,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAQ;AAAA;;;AD3CvB,0BAA0B;AAAA,EAC/B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GACwB;AACxB,QAAM,UAAU,GAAG;AACnB,QAAM,YAAY;AAClB,QAAM,WAAW;AACjB,QAAM,qBAAqB,SAAS,SAAS,SAAS;AAEtD,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,iBAAD;AAAA,IACE;AAAA,IACA,MAAM;AAAA,IACN,OAAO,cAAc,OAAO;AAAA,IAC5B,SAAS,MAAM;AACb,UAAI;AAAoB;AACxB,gBAAU,MAAM,MAAM,UAAU,EAAE,OAAO,EAAE,YAAY;AAAA;AAAA,MAG3D,oCAAC,iBAAD;AAAA,IACE;AAAA,IACA,YAAW;AAAA,IACX,OAAO,cAAc,OAAO;AAAA,IAC5B,MAAM;AAAA,IACN,WAAW;AAAA,MAEb,oCAAC,iBAAD;AAAA,IACE;AAAA,IACA,YAAW;AAAA,IACX,OAAO,cAAc,OAAO;AAAA,IAC5B,MAAM;AAAA,IACN,WAAW;AAAA,MAEb,oCAAC,iBAAD;AAAA,IACE;AAAA,IACA,YAAW;AAAA,IACX,OAAO,cAAc,OAAO;AAAA,IAC5B,MAAM;AAAA,IACN,WAAW;AAAA;AAAA;;;AMlErB,qBAA4B;;;ACA5B,oBAA0B;AAC1B,mBAAiB;AACjB,oBAA2B;AAGZ,6BAA6B;AAAA,EAC1C;AAAA,EACA;AAAA,EACA;AAAA,GAKC;AACD,QAAM,UAAU;AAChB,QAAM,YAAY;AAClB,QAAM,aAAa,QAAQ,UAAU;AAErC,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,UAAD;AAAA,IACE,UAAU;AAAA,IACV,SAAS,MAAM;AACb,YAAM,OAAO;AAEb,UAAI,CAAC,MAAM;AACT,eAAO;AAAA;AAGT,cAAQ,OACN,EAAE,WAAW,UAAU,YAAY,YAAY,iBAC/C,EAAE,QAAQ;AAAA;AAAA,IAGd,WAAW,0BAAK,EAAE,cAAc,cAAc;AAAA,KAE9C,oCAAC,yBAAD;AAAA,IACE,WAAW,0BAAK,uBAAuB;AAAA,MACrC,gBAAgB;AAAA;AAAA,MAGpB,oCAAC,QAAD,MAAO,UAAU,UAAU,UAE7B,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAQ,WAAU;AAAA;;;ADvCxC,2BAAuB;;;AEJvB,qBAAqB;;;ACArB,mBAAiB;AAEV,IAAM,oBAAoB,CAAC,EAAE,gBAAwC;AAC1E,SACE,oCAAC,OAAD;AAAA,IACE,WAAW,0BACT,sKACA;AAAA,KAEH;AAAA;;;ADCE,oBAAoB,EAAE,WAAW,YAA6B;AACnE,MAAI,CAAC,UAAU;AACb,WAAO,oCAAC,mBAAD;AAAA;AAGT,SACE,oCAAC,qBAAD;AAAA,IACE,SAAS,CAAC,MAAM;AACd,sBAAgB;AAAA;AAAA,IAElB,IAAI,MAAM;AAAA,IACV,WAAU;AAAA,KAET,YACC,oCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,KAAK;AAAA,IACL,KAAI;AAAA,OAGN,oCAAC,mBAAD;AAAA;;;AFvBD,2BAA2B,EAAE,iBAA+C;AACjF,QAAM,YAAY;AAElB,MAAI,gDAAe,YAAW,GAAG;AAC/B,WAAO;AAAA;AAGT,SACE,0DACG,cAAc,IACb,CAAC,EAAE,IAAI,WAAW,SAAS,UAAU,WAAW,WAAW,SAAS,gBAAgB;AAClF,WACE,oCAAC,4BAAO,KAAR;AAAA,MACE,SAAS,EAAE,SAAS;AAAA,MACpB,SAAS,EAAE,SAAS;AAAA,MACpB,YAAY,EAAE,UAAU;AAAA,MACxB,KAAK;AAAA,MACL,WAAU;AAAA,OAEV,oCAAC,UAAD;AAAA,MACE,SAAS,CAAC,MAAM;AACd,wBAAgB;AAChB,kBAAU,MAAM,QAAQ;AAAA;AAAA,MAE1B,WAAU;AAAA,OAEV,oCAAC,YAAD;AAAA,MACE;AAAA,MACA;AAAA,SAGJ,oCAAC,OAAD;AAAA,MAAK,WAAU;AAAA,OACb,oCAAC,OAAD;AAAA,MAAK,WAAU;AAAA,OACb,oCAAC,UAAD;AAAA,MACE,SAAS,CAAC,MAAM;AACd,wBAAgB;AAChB,kBAAU,MAAM,QAAQ;AAAA;AAAA,MAE1B,WAAU;AAAA,OAET,WAEH,oCAAC,QAAD;AAAA,MAAM,WAAU;AAAA,OAAgC,WAAW,aAC3D,oCAAC,OAAD;AAAA,MAAK,WAAU;AAAA,OAAkB,UACjC,oCAAC,qBAAD;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAAA;;;AItDpB,qBAA4B;AAG5B,qBAA0B;AASnB,0BAA0B,EAAE,WAAW,SAAS,QAAQ,aAAoC;AACjG,QAAM,YAAY;AAClB,QAAM,EAAE,aAAa;AAErB,SACE,oCAAC,OAAD,MACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,YAAD;AAAA,IACE,UAAU;AAAA,IACV;AAAA,MAGF,oCAAC,OAAD,MACE,oCAAC,UAAD;AAAA,IACE,SAAS,CAAC,MAAM;AACd,sBAAgB;AAChB,UAAI,aAAa,QAAQ;AACvB,eAAO;AAAA;AAET,gBAAU,MAAM,QAAQ;AAAA;AAAA,IAE1B,WAAU;AAAA,KAET,SAGH,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAsB,WAAW,eAGlD,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAwB;AAAA;;;ACzC3C,qBAAqB;AAUd,2BAA2B;AAAA,EAChC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GACyB;AACzB,QAAM,WAAW;AAAA,IACf;AAAA,MACE,OAAO;AAAA,MACP,OAAO;AAAA,MACP,KAAK,MAAM,QAAQ;AAAA;AAAA,IAErB,EAAE,OAAO,WAAW,OAAO,SAAS,KAAK,MAAM,QAAQ;AAAA,IACvD,EAAE,OAAO,WAAW,OAAO,SAAS,KAAK,MAAM,QAAQ;AAAA;AAGzD,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAQ,eACxB,oCAAC,QAAD,MAAM,cAEP,SAAS,IAAI,CAAC,EAAE,OAAO,OAAO,UAAU;AACvC,WACE,oCAAC,qBAAD;AAAA,MACE,OAAO,EAAE,eAAe;AAAA,MACxB,IAAI;AAAA,MACJ,SAAS;AAAA,MACT,KAAK;AAAA,MACL,WAAU;AAAA,OAEV,oCAAC,QAAD;AAAA,MAAM,WAAU;AAAA,OAAQ,QACxB,oCAAC,QAAD,MAAO;AAAA;AAAA;;;ACxCZ,yBAAyB,EAAE,UAA0C;AAC1E,MAAI,CAAC,UAAU,OAAO,WAAW,GAAG;AAClC,WAAO;AAAA;AAGT,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,OAAO,IAAI,CAAC,EAAE,SAAS,UAAU;AAChC,WACE,oCAAC,OAAD;AAAA,MACE,WAAU;AAAA,MACV,KAAK;AAAA,OAEL,oCAAC,OAAD;AAAA,MACE,KAAI;AAAA,MACJ,KAAK;AAAA,MACL,KAAK;AAAA,MACL,WAAU;AAAA;AAAA;AAAA;;;ACnBxB,qBAAwC;AACxC,mBAAiB;AACjB,qBAAiC;AACjC,qCAA6B;AAYtB,wBAAwB,EAAE,SAAS,UAAU,YAAY,cAAmC;AAfnG;AAgBE,QAAM,UAAU;AAChB,QAAM,WAAW;AACjB,QAAM,EAAE,SAAS;AACjB,QAAM,YAAY;AAClB,QAAM,gBAAgB,SAAS;AAC/B,QAAM,wBAAwB,+CAAe;AAC7C,QAAM,aAAa,QAAQ,UAAU;AACrC,QAAM,iBAAiB,QAAQ,SAAS;AAExC,QAAM,WAAW,OAAO,MAAM;AAC5B,MAAE;AACF,UAAM,QAAO;AAEb,QAAI,CAAC,OAAM;AACT,aAAO;AAAA;AAGT,UAAM,OAAO,IAAI,SAAS,EAAE;AAC5B,UAAM,UAAU,KAAK,IAAI;AACzB,QAAI,CAAC;AAAS,aAAO;AAErB,YAAQ,OACN;AAAA,MACE,SAAS,QAAQ;AAAA,MACjB;AAAA,MACA,YAAY;AAAA,OAEd,EAAE,QAAQ;AAAA;AAId,gCAAU,MAAM;AACd,QAAI,uBAAuB;AACzB;AAAA;AAAA,KAED,CAAC,YAAY;AAEhB,gCAAU,MAAM;AACd,QAAI,gBAAgB;AAClB;AAAA;AAAA,KAED,CAAC,YAAY;AAEhB,SACE,qDAAC,QAAQ,MAAT;AAAA,IACE;AAAA,IACA,WAAU;AAAA,KAEV,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,YAAD;AAAA,IACE,WAAW,mCAAM,YAAN,mBAAe;AAAA,IAC1B,UAAU,6BAAM;AAAA,OAIpB,qDAAC,wCAAD;AAAA,IACE,WAAW,0BACT,wFACA,cAAc;AAAA,IAEhB,KAAK;AAAA,IACL,MAAK;AAAA,MAGP,qDAAC,eAAD;AAAA,IACE,WAAU;AAAA,IACV,SAAS;AAAA,IACT,MAAK;AAAA,KACN;AAAA;;;Ad1EP,4BAAuB;;;AeVvB,qBAAoC;AAE7B,yBAAyB;AAC9B,QAAM,WAAW;AAEjB,QAAM,aAAa,gCAAY,MAAM;AACnC,QAAI,SAAS,SAAS;AACpB,eAAS,QAAQ;AAAA;AAAA,KAElB,CAAC;AAEJ,QAAM,aAAa,gCAAY,MAAM;AACnC,QAAI,SAAS,SAAS;AACpB,eAAS,QAAQ;AACjB,eAAS,QAAQ,QAAQ;AAAA;AAAA,KAE1B,CAAC;AAEJ,SAAO,EAAE,UAAU,YAAY;AAAA;;;AfE1B,mBAAmB;AAAA,EACxB,OAAO;AAAA,IACL,IAAI;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,EAEF;AAAA,EACA;AAAA,EACA;AAAA,GACiB;AACjB,QAAM,WAAW;AACjB,QAAM,EAAE,UAAU,YAAY,eAAe;AAC7C,QAAM,kBAAkB,YAAY;AACpC,QAAM,cAAc,YAAY;AAChC,QAAM,qBAAqB,mBAAmB;AAC9C,QAAM,cAAc,QAAQ;AAE5B,SACE,oCAAC,6BAAO,KAAR;AAAA,IACE,SAAS,EAAE,SAAS;AAAA,IACpB,SAAS,EAAE,SAAS;AAAA,IACpB,YAAY,EAAE,UAAU;AAAA,IACxB,WAAW,0BAAK,CAAC,eAAe;AAAA,KAE/B,sBACC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,6BAAD;AAAA,IAAa,WAAU;AAAA,MACvB,oCAAC,KAAD,MAAG,eAIP,oCAAC,WAAD;AAAA,IACE,SAAS,MAAO,cAAc,OAAO,SAAS,UAAU;AAAA,IACxD,UAAU;AAAA,IACV,WAAW,0BACT,4FACA,eAAe;AAAA,KAGjB,oCAAC,kBAAD;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,MAGF,oCAAC,iBAAD;AAAA,IAAiB;AAAA,MAEhB,eACC,oCAAC,mBAAD;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,MAIJ,oCAAC,kBAAD;AAAA,IACE,IAAI;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,MAGD,eACC,0DACE,oCAAC,gBAAD;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,MAGF,oCAAC,mBAAD;AAAA,IAAmB,eAAe;AAAA;AAAA;;;AgB9G9C,mCAAyB;AAQlB,wBAAwB;AAAA,EAC7B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAC+D;AAC/D,QAAM,EAAE,OAAO,kBAAkB,2CAAS;AAC1C,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,QACC,oCAAC,SAAD;AAAA,IACE,SAAS;AAAA,IACT,WAAU;AAAA,KAET,SAED,MACJ,oCAAC,SAAD;AAAA,IACE;AAAA,IACA,UAAQ;AAAA,IACR;AAAA,IACA;AAAA,KACI,cAAc,EAAE,IAAI,WAE1B,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAyB;AAAA;;;ACjC/C,mBAAiB;AACjB,qBAAyB;AAOlB,mBAAmB,EAAE,OAAO,aAA6B;AAC9D,QAAM,CAAC,QAAQ,aAAa,6BAAiB;AAE7C,SACE,oCAAC,OAAD;AAAA,IACE,cAAY;AAAA,IACZ,WAAU;AAAA,KAET,MAAM,IAAI,CAAC,EAAE,aAAa,UAAU;AACnC,UAAM,WAAW,WAAW;AAE5B,WACE,oCAAC,UAAD;AAAA,MACE,gBAAc,WAAW,SAAS;AAAA,MAClC,SAAS,MAAM,UAAU;AAAA,MACzB,KAAK;AAAA,MACL,WAAW,0BACT,YACE,mHACF;AAAA,OAGD;AAAA;AAAA;AAQb,IAAM,eAAe;;;ACtCd,gCAAgC,EAAE,YAAyC;AAChF,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ;AAAA;;;ACKA,mBAAmB,EAAE,QAAQ,UAAU,UAA0B;AACtE,MAAI,CAAC,UAAU,OAAO,WAAW,GAAG;AAClC,WACE,oCAAC,OAAD;AAAA,MAAK,WAAU;AAAA,OACZ,QAAQ;AAAA;AAKf,SACE,0DACG,OAAO,IAAI,CAAC,UAAU;AACrB,UAAM,MAAM,GAAG,MAAM,KAAK,MAAM,YAAY,aAAa;AACzD,WACE,oCAAC,WAAD;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAAA;AAQZ,IAAM,UAAU;AAAA,EACd,SAAS;AAAA,EACT,MAAM;AAAA;;;ACnCR,4BAAuB;AAEhB,cAAc,EAAE,UAAU,aAAgE;AAC/F,SACE,oCAAC,6BAAO,KAAR;AAAA,IACE;AAAA,IACA,SAAS,EAAE,SAAS;AAAA,IACpB,SAAS,EAAE,SAAS;AAAA,IACpB,MAAM,EAAE,SAAS;AAAA,KAEhB;AAAA;;;ACRP,iCAAwC,SAAiB,QAAgB;AACvE,SAAO,MAAM,MACX,aAAa,MAAM,UAAU,UAC7B,mBAAmB,EAAE,QAAQ,QAAQ;AAAA;AAIzC,+BAAsC,SAAiB,QAAgB;AACrE,SAAO,MAAM,MACX,aAAa,SAAS,QAAQ,UAC9B,mBAAmB,EAAE,QAAQ,QAAQ;AAAA;AAIzC,iCAAwC,SAAiB,QAAgB;AACvE,SAAO,MAAM,MACX,aAAa,MAAM,UAAU,UAC7B,mBAAmB,EAAE,QAAQ,QAAQ;AAAA;AAIzC,8BAAqC,YAAoB,QAAgB;AACvE,SAAO,MAAM,MACX,aAAa,QAAQ,OAAO,aAC5B,mBAAmB,EAAE,QAAQ,QAAQ;AAAA;;;;;;AnCXlC,kBAAiB;AACtB,SAAO;AAAA,IACL,EAAE,KAAK,cAAc,MAAM;AAAA,IAC3B;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA;AAAA;AAAA;AAKL,IAAM,OAAqB,MAAO;AAAA,EACvC,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AAAA;AAGL,IAAM,SAAyB,OAAO,EAAE,cAAc;AAC3D,QAAM,SAAS,UAAU;AACzB,SAAO,MAAM,MAAM,aAAa,KAAK,IAAI,mBAAmB,EAAE;AAAA;AAGjD,eAAe;AApC9B;AAqCE,QAAM,aAAa;AACnB,QAAM,kBAAkB,WAAW,UAAU;AAE7C,MAAI,eAAe;AACnB,QAAM,WAAW;AACjB,MAAI,sCAAU,UAAS,4CAAU,UAAV,mBAAiB,mBAAkB,MAAM;AAC9D,mBAAe;AAAA;AAGjB,SACE,oCAAC,QAAD;AAAA,IACE,MAAK;AAAA,IACL,WAAU;AAAA,KAEV,oCAAC,QAAD,MACE,oCAAC,qBAAD,OACA,oCAAC,sBAAD,QAEF,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACd,oCAAC,uBAAD,OACC,eAAe,oCAAC,kCAAD,QAAwB,MACxC,oCAAC,wBAAD,OACA,oCAAC,2BAAD,OACC,mBACC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,eAAD;AAAA;;;AoC9DZ;AAAA;AAAA;AAAA;AAAA,qBAAuB;;;ACAvB,qBAAqB;;;ACArB,sBAAuD;AACvD,2BAA8C;AAC9C,qBAAwC;AACxC,oBAAiB;AAIV,wBAAwB,EAAE,QAA+B;AAPhE;AAQE,QAAM,UAAU;AAChB,QAAM,YAAY;AAElB,SACE,oCAAC,2BAAD,MACE,oCAAC,8BAAD;AAAA,IACE,WAAU;AAAA,IACV,SAAO;AAAA,KAEP,oCAAC,UAAD;AAAA,IACE,WAAU;AAAA,IACV,cAAW;AAAA,KAEX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,oCAAM,YAAN,mBAAe,aACd,oCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,KAAK,mCAAM,YAAN,mBAAe;AAAA,IACpB,KAAI;AAAA,OAGN,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAmH,OAKtI,oCAAC,OAAD,MAAM,KAAK,WACX,oCAAC,iCAAD;AAAA,IAAiB,WAAU;AAAA,QAI/B,oCAAC,8BAAD;AAAA,IAAS,WAAU;AAAA,KACjB,oCAAC,4BAAD;AAAA,IACE,SAAS,MAAM,UAAU,MAAM,QAAQ,KAAK;AAAA,IAC5C,WAAW;AAAA,KAEX,oCAAC,2BAAD;AAAA,IAAW,WAAU;AAAA,MAAiB,eAGxC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oCAAC,4BAAD;AAAA,IACE,SAAS,MACP,QAAQ,OAAO,EAAE,YAAY,YAAY,EAAE,QAAQ,QAAQ,QAAQ;AAAA,IAErE,WAAW,2BAAK,cAAc;AAAA,KAE9B,oCAAC,4BAAD;AAAA,IAAY,WAAU;AAAA,MAAiB;AAAA;AAQjD,IAAM,eACJ;;;AC/DF,qBAAqC;AACrC,oBAAiB;AASV,wBAAwB,EAAE,YAAY,IAAI,OAAO,aAAkC;AACxF,QAAM,YAAY;AAClB,QAAM,YAAY;AAElB,MAAI,YAAY;AACd,WACE,oCAAC,UAAD;AAAA,MACE,WAAW,CAAC,EAAE,eAAe,2BAAK,EAAE,oBAAoB,YAAY;AAAA,MACpE,SAAS,MAAM;AACb,cAAM,OAAO;AAEb,YAAI,CAAC,MAAM;AACT,iBAAO;AAAA;AAGT,kBAAU;AAAA;AAAA,OAGX;AAAA;AAKP,SACE,oCAAC,wBAAD;AAAA,IACE,WAAW,CAAC,EAAE,eAAe,2BAAK,EAAE,oBAAoB,YAAY;AAAA,IACpE;AAAA,KAEC;AAAA;;;AFhCA,4BAA4B,EAAE,QAA+B;AAClE,SACE,0DACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,qBAAD;AAAA,IACE,IAAI,MAAM;AAAA,IACV,WAAU;AAAA,KACX,YAIH,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACX,SAAS,IAAI,CAAC,EAAE,OAAO,IAAI,iBAC1B,oCAAC,gBAAD;AAAA,IACE,KAAK;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,SAKR,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,gBAAD;AAAA,IAAgB;AAAA;AAAA;AAMxB,IAAM,WAAW;AAAA,EACf,EAAE,IAAI,MAAM,MAAM,OAAO;AAAA,EACzB,EAAE,IAAI,MAAM,SAAS,OAAO;AAAA,EAC5B,EAAE,IAAI,MAAM,WAAW,OAAO,aAAa,YAAY;AAAA;;;AGpClD,+BAA+B;AACpC,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACX,UAAS,IAAI,CAAC,EAAE,OAAO,SACtB,oCAAC,gBAAD;AAAA,IACE,WAAU;AAAA,IACV,KAAK;AAAA,IACL;AAAA,IACA;AAAA;AAAA;AAQZ,IAAM,YAAW,CAAC,EAAE,IAAI,MAAM,OAAO,OAAO;;;AChBrC,gBAAgB,EAAE,YAA2C;AAClE,QAAM,OAAO;AAEb,SACE,0DACE,oCAAC,UAAD;AAAA,IAAQ,WAAU;AAAA,KAChB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,OAAO,oCAAC,oBAAD;AAAA,IAAoB;AAAA,OAAiB,oCAAC,qBAAD,SAGhD;AAAA;;;ACdP,oBAAgD;AAChD,qBAAwB;AACxB,oBAAiB;AAIV,wBAAwB;AAC7B,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACX,YAAY,IAAI,CAAC,EAAE,IAAI,MAAM,IAAI,iBAChC,oCAAC,YAAD;AAAA,IACE,KAAK;AAAA,IACL,MAAM;AAAA,IACN;AAAA,IACA;AAAA;AAAA;AAQZ,IAAM,aAAa,CAAC;AAAA,EAClB;AAAA,EACA;AAAA,EACA;AAAA,MAKI;AACJ,QAAM,YAAY;AAElB,SACE,oCAAC,wBAAD;AAAA,IACE,WAAW,CAAC,EAAE,eACZ,2BACE,YAAY,oBACZ;AAAA,IAGJ;AAAA,IACA,SAAS,CAAC,MAAM;AACd,UAAI,YAAY;AACd,cAAM,OAAO;AAEb,YAAI,CAAC,MAAM;AACT,YAAE;AACF,iBAAO;AAAA;AAAA;AAAA;AAAA,KAKb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAM,WAAU;AAAA;AAAA;AAMxB,IAAM,cAAc;AAAA,EAClB,EAAE,IAAI,GAAG,MAAM,wBAAU,IAAI,MAAM;AAAA,EACnC,EAAE,IAAI,GAAG,MAAM,uBAAS,IAAI,MAAM;AAAA,EAClC,EAAE,IAAI,GAAG,MAAM,4BAAc,IAAI,MAAM,WAAW,YAAY;AAAA;;;AChEhE,kBAAyB;AAGzB,8BAAqC,QAAgB;AACnD,UAAQ,IAAI,wEAAiE;AAC7E,QAAM,MAAM,aAAa,KAAK,QAAQ,mBAAmB,EAAE,QAAQ,QAAQ;AAE3E,SAAO,0BAAS;AAAA;;;APJH,oBAAoB;AACjC,SACE,0DACE,oCAAC,QAAD,MACE,oCAAC,uBAAD,QAEF,oCAAC,cAAD;AAAA;;;AQTN;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,4BAAsB;;;ACDtB,qBAAsC;;;ACAtC,qBAAiC;AAU1B,uBAAuB,EAAE,WAA+B;AAC7D,QAAM,YAAY;AAClB,QAAM,UAAU;AAChB,QAAM,0BAA0B,QAAQ,UAAU;AAElD,SACE,0DACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,QAAQ,YACP,oCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,KAAK,QAAQ;AAAA,IACb,KAAI;AAAA,OAGN,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,OAGnB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,QAAQ,YACP,oCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,KAAK,QAAQ;AAAA,IACb,KAAI;AAAA,OAGN,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAA4H,OAM/I,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAA+C,QAAQ,WACpE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,qBAAD;AAAA,IACE,OAAO,EAAE,eAAe;AAAA,IACxB,SAAS;AAAA,IACT,IAAI,MAAM,QAAQ;AAAA,IAClB,WAAU;AAAA,KAEV,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAQ,QAAQ,gBAC7B,oCAAC,KAAD,MAAG,eAEL,oCAAC,qBAAD;AAAA,IACE,OAAO,EAAE,eAAe;AAAA,IACxB,SAAS;AAAA,IACT,IAAI,MAAM,QAAQ;AAAA,IAClB,WAAU;AAAA,KAEV,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAQ,QAAQ,gBAC7B,oCAAC,KAAD,MAAG,iBAIT,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KACV,QAAQ,QAKf,oCAAC,eAAD;AAAA,IACE,UAAU;AAAA,IACV,SAAS,MAAM;AACb,YAAM,OAAO;AAEb,UAAI,CAAC,MAAM;AACT,eAAO;AAAA;AAGT,cAAQ,OACN,EAAE,YAAY,QAAQ,GAAG,YAAY,YAAY,YACjD,EAAE,QAAQ;AAAA;AAAA,KAIb,QAAQ,cAAc,cAAc;AAAA;;;AC3FnD,sBAA8B;AAC9B,qBAAiC;AAEjC,oBAAiB;AACjB,4BAAwC;;;ACJxC,qBAAyB;AAElB,0BAA0B,EAAE,YAAY;AAC7C,QAAM,EAAE,QAAQ;AAEhB,QAAM,CAAC,aAAa,iBAAiB,6BAAS;AAAA,IAC5C;AAAA,IACA,cAAc;AAAA,IACd,QAAQ,EAAE,UAAU,MAAM,KAAK;AAAA;AAGjC,QAAM,kBAAkB,CAAC,MAAM;AAC7B,kBAAc,iCACT,cADS;AAAA,OAEX,EAAE,OAAO,OAAO,EAAE,OAAO;AAAA,MAC1B,QAAQ,iCACH,YAAY,SADT;AAAA,SAEL,EAAE,OAAO,OAAO,sBAAsB,EAAE,OAAO,MAAM,EAAE,OAAO;AAAA;AAAA;AAAA;AAKrE,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,iBAAiB,CAAC,OAAO,OAAO,YAAY,QAAQ,KAAK,CAAC,MAAM,CAAC,CAAC;AAAA;AAAA;AAItE,IAAM,wBAAwB,CAAC,MAAM,UAAU;AAC7C,UAAQ;AAAA,SACD;AACH,aAAO,YAAY;AAAA;AAGnB;AAAA;AAAA;AAIN,IAAM,cAAc,CAAC,QAAgB;AACnC,MAAI,OAAO,QAAQ,YAAY,IAAI,SAAS,GAAG;AAC7C,WAAO;AAAA;AAET,MAAI,IAAI,SAAS,IAAI;AACnB,WAAO;AAAA;AAAA;;;AC5CX,oBAAwC;AACxC,oBAAiB;AAQV,2BAA2B,EAAE,SAAS,UAAU,OAAO,SAAiC;AAC7F,SACE,oCAAC,UAAD;AAAA,IACE,cAAY,UAAU,iBAAiB;AAAA,IACvC,SAAS,UAAU,QAAQ;AAAA,IAC3B,WAAU;AAAA,KAEV,oCAAC,OAAD;AAAA,IACE,WAAW,2BACT,oHACA,WAAW;AAAA,MAGd,UACC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,2BAAD;AAAA,IAAa,WAAU;AAAA,QAGzB,oCAAC,0BAAD;AAAA,IAAY,WAAU;AAAA;AAAA;;;AFZvB,6BAA6B,EAAE,WAAqC;AACzE,QAAM,UAAU;AAChB,QAAM,kBAAkB,QAAQ,UAAU;AAC1C,QAAM,EAAE,aAAa,iBAAiB,oBAAoB,iBAAiB;AAAA,IACzE,UAAU;AAAA,MACR,KAAK,QAAQ;AAAA;AAAA;AAIjB,QAAM;AAAA,IACJ,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,UAAU;AAAA,IACV,QAAQ;AAAA,MACN,eAAe,EAAE,UAAU,GAAG,UAAU,OAAO,WAAW;AAE9D,QAAM;AAAA,IACJ,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,UAAU;AAAA,IACV,OAAO;AAAA,MACL,eAAe,EAAE,UAAU,GAAG,UAAU,OAAO,WAAW;AAE9D,QAAM,oBAAoB,iBAAiB;AAC3C,QAAM,wBACJ,YAAY,QAAQ,QAAQ,OAAO,4CAAa,QAAO,4DAAqB;AAC9E,QAAM,uBAAuB,qBAAqB,CAAC;AACnD,QAAM,cAAc,4DAAqB,eAAc,QAAQ;AAE/D,SACE,0DACE,oCAAC,SAAD,mBAAW,aAAa,mBACxB,oCAAC,SAAD,mBAAW,cAAc,mBACzB,oCAAC,uCAAD,MACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,4CAAa,eAAc,QAAQ,YAClC,oCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,KAAK,4CAAa,eAAc,QAAQ;AAAA,IACxC,KAAI;AAAA,OAGN,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MAEjB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,mBAAD;AAAA,IACE,SAAS,aAAa;AAAA,IACtB,OAAO,2CAAa;AAAA,IACpB,SAAS,2CAAa;AAAA,MAEvB,cAAc,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAA8B,eAAmB,QAGjF,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,cACC,oCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,KAAK;AAAA,IACL,KAAI;AAAA,OAGN,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAA4H,MAK7I,oCAAC,mBAAD;AAAA,IACE,SAAS,cAAc;AAAA,IACvB,OAAO,2DAAqB;AAAA,IAC5B,SAAS,2DAAqB;AAAA,MAG/B,gBAAgB,oCAAC,MAAD;AAAA,IAAM,WAAU;AAAA,KAA6B,gBAGhE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KACV,QAAQ,WAEX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,qBAAD;AAAA,IACE,IAAI,MAAM,QAAQ;AAAA,IAClB,WAAU;AAAA,KAEV,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAQ,QAAQ,gBAC7B,oCAAC,KAAD,MAAG,eAEL,oCAAC,qBAAD;AAAA,IACE,IAAI,MAAM,QAAQ;AAAA,IAClB,WAAU;AAAA,KAEV,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAQ,QAAQ,gBAC7B,oCAAC,KAAD,MAAG,iBAIT,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IACE,WAAU;AAAA,IACV,SAAQ;AAAA,KAER,oCAAC,+BAAD;AAAA,IAAe,WAAU;AAAA,OAE3B,oCAAC,SAAD;AAAA,IACE,IAAG;AAAA,IACH,cAAW;AAAA,IACX,OAAO,YAAY;AAAA,IACnB,MAAK;AAAA,IACL,aAAY;AAAA,IACZ,UAAU;AAAA,IACV,WAAU;AAAA,OAGd,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,YAAY,OAAO,MAClB,oCAAC,6BAAO,GAAR;AAAA,IACE,SAAS,EAAE,SAAS;AAAA,IACpB,SAAS,EAAE,SAAS;AAAA,IACpB,MAAM,EAAE,SAAS;AAAA,KAEhB,YAAY,OAAO,OAGtB,MAKL,wBACC,oCAAC,MAAD;AAAA,IAAM,WAAU;AAAA,KACd,oCAAC,UAAD;AAAA,IACE,WAAW,2BACT,wBAAwB,0BACxB;AAAA,IAEF,UAAU;AAAA,IACV,SAAS,MAAM;AACb,cAAQ,OACN;AAAA,QACE,YAAY;AAAA,QACZ,KAAK,YAAY;AAAA,SACb,4CAAa,QAAO,EAAE,WAAW,2CAAa,QAC9C,4DAAqB,QAAO,EAAE,WAAW,2DAAqB,QAEpE,EAAE,QAAQ;AAAA;AAAA,KAIb,kBAAkB,oCAAC,cAAD,QAAmB,2BAI1C,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA;AAAA;;;AF/JxB,mBAAmB;AACxB,QAAM,EAAE,SAAS,WAAW;AAC5B,UAAQ,IAAI,+DAAwD;AACpE,QAAM,OAAO;AACb,QAAM,sBAAsB,8BAAM,cAAa,oCAAS;AAExD,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,sBACC,oCAAC,qBAAD;AAAA,IAAqB;AAAA,OAErB,oCAAC,eAAD;AAAA,IAAe;AAAA,MAEjB,oCAAC,wBAAD,MACE,oCAAC,WAAD;AAAA,IACE,WAAU;AAAA,IACV,OAAO;AAAA,MAET,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACd,oCAAC,WAAD;AAAA,IACE;AAAA,IACA,SAAQ;AAAA,QAId,oCAAC,uBAAD;AAAA;AAKN,IAAM,iBAAiB;AAAA,EACrB,EAAE,aAAa,SAAS,KAAK;AAAA,EAC7B,EAAE,aAAa,oBAAoB,KAAK;AAAA,EACxC,EAAE,aAAa,SAAS,KAAK;AAAA,EAC7B,EAAE,aAAa,SAAS,KAAK;AAAA;;;AK5C/B,qCAA4C,UAAkB,QAAgB;AAC5E,SAAO,MAAM,aAAa,aAAa,OAAO,iBAAiB,WAAW,EAAE;AAAA;AAG9E,4BAAmC,UAAkB,QAAgB;AACnE,SAAO,MAAM,MAAM,aAAa,QAAQ,aAAa,WAAW,mBAAmB,EAAE;AAAA;AAGvF,4BAAmC,UAAkB,QAAgB;AACnE,SAAO,MAAM,MAAM,aAAa,QAAQ,aAAa,WAAW,mBAAmB,EAAE;AAAA;AAGvF,6BACE,QACA,MACA;AACA,SAAO,MAAM,MACX,aAAa,QAAQ,QACrB,mBAAmB,EAAE,QAAQ,QAAQ,SAAS;AAAA;;;ANb3C,IAAM,SAAyB,OAAO,EAAE,cAA4B;AACzE,QAA6D,WAAM,cAAc,UAAzE,UAAQ,YAAY,SAAS,eAAwB,IAAT,iBAAS,IAAT,CAA5C,UAAQ,cAAY,WAAS;AAErC,UAAQ;AAAA,SACD;AACH,aAAO,MAAM,eAAe,YAAY;AAAA,SAErC;AACH,aAAO,MAAM,kBAAkB,SAAS;AAAA,SAErC;AACH,aAAO,MAAM,gBAAgB,SAAS;AAAA,SAEnC;AACH,aAAO,MAAM,kBAAkB,SAAS;AAAA,SAErC;AACH,aAAO,MAAM,cAAc,QAAQ;AAAA;AAEnC;AAAA;AAAA;AAIC,IAAM,UAAyB,OAAO,EAAE,SAAS,aAAa;AACnE,QAAM,SAAS,UAAU;AACzB,QAAM,WAAW,OAAO;AACxB,qCAAU,UAAU;AAEpB,SAAO,MAAM,sBAAsB,UAAU;AAAA;AAGhC,wBAAwB;AACrC,SAAO,oCAAC,SAAD;AAAA;;;AOvCT;AAAA;AAAA;AAAA;AAAA;AACA,qBAAyC;AACzC,6BAAsB;;;ACFtB,0BAA6C;AAC7C,qBAA4B;;;ACA5B,qBAAiC;AAM1B,kBAAkB,EAAE,QAAuB;AAChD,QAAM,YAAY;AAClB,QAAM,UAAU;AAEhB,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,YAAD;AAAA,IACE,UAAU,KAAK;AAAA,IACf,WAAW,KAAK;AAAA,MAElB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,qBAAD;AAAA,IACE,WAAU;AAAA,IACV,IAAI,MAAM,KAAK;AAAA,KAEd,KAAK,WAER,oCAAC,OAAD,MAAM,KAAK,eAAc,kBAqB/B,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAQ,KAAK;AAAA;;;ACxC3B,sBAAsB,EAAE,SAA4B;AACzD,MAAI,CAAC,SAAS,MAAM,WAAW,GAAG;AAChC,WAAO,oCAAC,KAAD;AAAA,MAAG,WAAU;AAAA,OAAU;AAAA;AAEhC,SACE,0DACG,+BAAO,IAAI,CAAC,SACX,oCAAC,UAAD;AAAA,IACE,KAAK,KAAK;AAAA,IACV;AAAA;AAAA;;;AFHH,oBAAoB,EAAE,WAAW,IAAI,SAAS,SAA0B;AAC7E,UAAQ,IAAI,mEAA4D;AACxE,QAAM,YAAY;AAElB,SACE,oCAAC,0BAAD;AAAA,IACE,aAAa;AAAA,IACb,cAAc,MAAM,UAAU,MAAM,EAAE,SAAS,MAAM,OAAO,EAAE,eAAe;AAAA,KAE7E,oCAAC,4BAAD,MACE,oCAAC,6BAAD;AAAA,IAAS,WAAU;AAAA,KACjB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD,MAAM,mBAAmB,SAAS,YAClC,oCAAC,2BAAD;AAAA,IAAO,WAAU;AAAA,KAAwL,WAI3M,oCAAC,cAAD;AAAA,IAAc;AAAA;AAAA;AAS5B,4BAA4B,SAA6B,UAAkB;AACzE,SAAO;AAAA,IACL,UAAU;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,WAAW,GAAG;AAAA,IACd,WAAW,GAAG;AAAA,IACd;AAAA;;;ADzCG,IAAM,UAAyB,OAAO,EAAE,SAAS,aAAa;AACnE,QAAM,SAAS,UAAU;AACzB,QAAM,WAAW,OAAO;AACxB,sCAAU,UAAU;AAEpB,SAAO,MAAM,aAAa,UAAU;AAAA;AAGvB,qBAAqB;AAClC,QAAM,YAAY;AAClB,QAAM,EAAE,aAAa;AACrB,sCAAU,UAAU;AAEpB,SACE,oCAAC,YAAD;AAAA,IACE;AAAA,IACA,SAAQ;AAAA,IACR,OAAO;AAAA;AAAA;;;AIxBb;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAyC;AAEzC,6BAAsB;AAKf,IAAM,UAAyB,OAAO,EAAE,SAAS,aAAa;AACnE,QAAM,SAAS,UAAU;AACzB,QAAM,WAAW,OAAO;AACxB,sCAAU,UAAU;AAEpB,SAAO,MAAM,aAAa,UAAU;AAAA;AAGvB,qBAAqB;AAClC,QAAM,QAAQ;AACd,QAAM,EAAE,aAAa;AACrB,sCAAU,UAAU;AAEpB,SACE,oCAAC,YAAD;AAAA,IACE;AAAA,IACA,SAAQ;AAAA,IACR;AAAA;AAAA;;;ACxBN;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,qBAA8B;AAIvB,qBAAqB;AAC1B,QAAM,SAAS;AAEf,SACE,oCAAC,wBAAD,MACE,oCAAC,WAAD;AAAA,IACE,WAAU;AAAA,IACV,OAAO;AAAA,MAET,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACd,oCAAC,WAAD;AAAA,IAAW;AAAA;AAAA;AAMnB,IAAM,kBAAiB;AAAA,EACrB,EAAE,aAAa,SAAS,KAAK;AAAA,EAC7B,EAAE,aAAa,oBAAoB,KAAK;AAAA,EACxC,EAAE,aAAa,SAAS,KAAK;AAAA,EAC7B,EAAE,aAAa,SAAS,KAAK;AAAA;;;ACtB/B,mCAA0C,QAAgB;AACxD,SAAO,MAAM,MAAM,aAAa,MAAM,cAAc,mBAAmB,EAAE;AAAA;;;AFEpE,IAAM,UAAyB,OAAO,EAAE,cAA4B;AACzE,QAAM,EAAE,QAAQ,YAAY,YAAY,MAAM,cAAc;AAE5D,UAAQ;AAAA,SACD;AACH,aAAO,MAAM,kBAAkB,SAAS;AAAA,SAErC;AACH,aAAO,MAAM,gBAAgB,SAAS;AAAA,SAEnC;AACH,aAAO,MAAM,kBAAkB,SAAS;AAAA;AAExC;AAAA;AAAA;AAIC,IAAM,UAAyB,OAAO,EAAE,cAAc;AAC3D,QAAM,SAAS,UAAU;AACzB,SAAO,MAAM,oBAAoB;AAAA;AAGpB,yBAAyB;AACtC,SAAO,oCAAC,WAAD;AAAA;;;AG5BT;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,qBAA8B;;;ACAvB,wBAAwB;AAC7B,SACE,oCAAC,OAAD,MACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAyC;AAAA;;;ACJvD,wBAAwB,EAAE,YAA2C;AAC1E,SAAO,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAA4D;AAAA;;;AFIpF,qBAAuB;AAEhB,iBAAiB;AACtB,QAAM,EAAE,OAAO,aAAa;AAE5B,SACE,0DACE,oCAAC,WAAD,OACA,oCAAC,gBAAD,MACE,oCAAC,WAAD;AAAA,IACE;AAAA,IACA;AAAA,IACA,SAAQ;AAAA,IACR,KAAK;AAAA,MAEP,oCAAC,cAAD,QAEF,oCAAC,uBAAD;AAAA;;;AGtBN,mBAAqB;AAGrB,+BAAsC,SAAiB,QAAgB,MAA2B;AAChG,SAAO,MAAM,MACX,aAAa,SAAS,QAAQ,UAC9B,mBAAmB,EAAE,QAAQ,MAAM,QAAQ;AAAA;AAI/C,mCAA0C,WAAmB,QAAgB;AAC3E,SAAO,MAAM,MACX,aAAa,SAAS,YAAY,YAClC,mBAAmB,EAAE,QAAQ,QAAQ;AAAA;AAIzC,4BAAmC,SAAiB,QAAgB;AAClE,QAAM,OAAO,MAAM,MACjB,aAAa,OAAO,aAAa,UACjC,mBAAmB,EAAE;AAGvB,QAAM,SAAS,MAAM,KAAK;AAE1B,SAAO,uBAAK,QAAQ;AAAA,IAClB,SAAS;AAAA,MACP,iBAAiB;AAAA;AAAA;AAAA;AAKvB,iCAAwC,SAAiB,QAAgB;AACvE,SAAO,MAAM,MAAM,aAAa,MAAM,kBAAkB,UAAU,mBAAmB,EAAE;AAAA;AAGzF,iCAAwC,SAAiB,QAAgB;AACvE,SAAO,MAAM,MAAM,aAAa,MAAM,kBAAkB,UAAU,mBAAmB,EAAE;AAAA;AAGzF,qCAA4C,SAAiB,QAAgB;AAC3E,SAAO,MAAM,MACX,aAAa,SAAS,sBAAsB,UAC5C,mBAAmB,EAAE;AAAA;;;AJhClB,IAAM,UAAyB,OAAO,EAAE,SAAS,aAAa;AACnE,QAAM,SAAS,UAAU;AACzB,SAAO,MAAM,aAAa,OAAO,IAAI;AAAA;AAGhC,IAAM,UAAyB,OAAO,EAAE,cAA4B;AACzE,QAAwE,WAAM,cAC5E,UADM,cAAY,SAAS,WAAW,YAAY,WAAoB,IAAT,iBAAS,IAAT,CAAvD,cAAY,WAAS,aAAW,cAAY;AAIpD,UAAQ;AAAA,SACD;AACH,aAAO,MAAM,eAAe,YAAY;AAAA,SAErC;AACH,aAAO,MAAM,kBAAkB,SAAS;AAAA,SAErC;AACH,aAAO,MAAM,gBAAgB,SAAS;AAAA,SAEnC;AACH,aAAO,MAAM,kBAAkB,SAAS;AAAA,SAErC;AACH,aAAO,MAAM,gBAAgB,SAAS,QAAQ;AAAA,SAE3C;AACH,aAAO,MAAM,oBAAoB,WAAW;AAAA;AAG5C;AAAA;AAAA;AAIS,sBAAsB;AACnC,SAAO,oCAAC,OAAD;AAAA;;;AK9CT;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAyC;AAEzC,6BAAsB;AAKf,IAAM,UAAyB,OAAO,EAAE,SAAS,aAAa;AACnE,QAAM,SAAS,UAAU;AACzB,QAAM,UAAU,OAAO;AACvB,sCAAU,SAAS;AAEnB,SAAO,MAAM,sBAAsB,SAAS;AAAA;AAG/B,0BAA0B;AACvC,QAAM,WAAW;AAEjB,SACE,oCAAC,YAAD;AAAA,IACE,SAAQ;AAAA,IACR,OAAO;AAAA;AAAA;;;ACrBb;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAyC;AAEzC,6BAAsB;AAKf,IAAM,UAAyB,OAAO,EAAE,SAAS,aAAa;AACnE,QAAM,SAAS,UAAU;AACzB,QAAM,UAAU,OAAO;AACvB,sCAAU,SAAS;AAEnB,SAAO,MAAM,kBAAkB,SAAS;AAAA;AAG3B,uBAAuB;AACpC,QAAM,QAAQ;AAEd,SACE,oCAAC,YAAD;AAAA,IACE,SAAQ;AAAA,IACR,OAAO;AAAA;AAAA;;;ACrBb;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAyC;AAEzC,6BAAsB;AAKf,IAAM,UAAyB,OAAO,EAAE,SAAS,aAAa;AACnE,QAAM,SAAS,UAAU;AACzB,QAAM,UAAU,OAAO;AACvB,sCAAU,SAAS;AAEnB,SAAO,MAAM,kBAAkB,SAAS;AAAA;AAG3B,uBAAuB;AACpC,QAAM,QAAQ;AAEd,SACE,oCAAC,YAAD;AAAA,IACE,SAAQ;AAAA,IACR,OAAO;AAAA;AAAA;;;ACrBb;AAAA;AAAA;AAAA;;;ACAA,oBAA2B;AAC3B,sCAA6B;AAItB,mBAAmB;AACxB,SACE,oCAAC,wBAAD,MACE,oCAAC,WAAD;AAAA,IACE,WAAU;AAAA,IACV,OAAO;AAAA,MAET,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACd,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,0BAAD;AAAA,IAAY,WAAU;AAAA,MAEtB,oCAAC,yCAAD;AAAA,IACE,WAAU;AAAA,IACV,aAAY;AAAA,OAIhB,oCAAC,eAAD,MAAe,YAEjB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAA4C;AAAA;AAQnE,IAAM,kBAAiB;AAAA,EACrB,EAAE,aAAa,SAAS,KAAK;AAAA,EAC7B,EAAE,aAAa,oBAAoB,KAAK;AAAA,EACxC,EAAE,aAAa,SAAS,KAAK;AAAA,EAC7B,EAAE,aAAa,SAAS,KAAK;AAAA;;;ADnChB,wBAAwB;AACrC,SAAO,oCAAC,SAAD;AAAA;;;AEHT;AAAA;AAAA;AAAA;AAIO,IAAM,UAAyB,OAAO,EAAE,cAAc;AAC3D,QAAM,SAAS,UAAU;AAEzB,SAAO,MAAM,eAAe;AAAA;;;ACP9B;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA8C;AAEvC,IAAM,WAAyB,YAAY;AAChD,SAAO,2BAAS;AAAA;AAGH,sBAAsB;AACnC,SAAO;AAAA;;;ACPT;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,qBAAuB;AAEvB,qBAA8B;;;ACFvB,yBAAwB;AAC7B,SACE,oCAAC,OAAD,MACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAyC;AAAA;;;ACJ9D,qBAAiC;AAEjC,oBAAiB;AACjB,sCAA6B;;;ACH7B,oBAA+B;AAE/B,oBAAiB;;;ACFjB,sBAAyC;AACzC,4BAA8C;AAE9C,oBAAiB;AAEjB,IAAM,YAAY;AAClB,IAAM,WAAW;AAOF,0BAA0B;AAAA,EACvC;AAAA,EACA;AAAA,GACwB;AACxB,QAAM,aAAa,qBAAqB;AACxC,QAAM,cAAc,qBAAqB;AACzC,QAAM,aAAa,aAAa,4BAAY;AAE5C,SACE,oCAAC,4BAAD,MACE,oCAAC,+BAAD,MACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,YAAD;AAAA,IAAY,WAAU;AAAA,MACtB,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACb,aAAa,uBAAuB,gCAM7C,oCAAC,+BAAD;AAAA,IAAS,WAAU;AAAA,KACjB,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAA2B,mBACxC,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAA6B,wCAE1C,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,aAAD;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAM;AAAA,IACN,SAAS,MAAM,oBAAoB;AAAA,MAGrC,oCAAC,aAAD;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAM;AAAA,IACN,SAAS,MAAM,oBAAoB;AAAA;AAAA;AAQ/C,IAAM,cAAc,CAAC;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,MAMI;AACJ,SACE,oCAAC,6BAAD;AAAA,IACE,gBAAc;AAAA,IACd,WAAW,2BACT,iEACA,QAAQ;AAAA,IAEV;AAAA,KAEA,oCAAC,MAAD;AAAA,IAAM,WAAU;AAAA,MACf;AAAA;;;AD9DA,mCAAmC;AAAA,EACxC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GACwB;AACxB,QAAM,YAAY;AAElB,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL,SAAS,MAAM;AACb,YAAM,OAAO;AAEb,UAAI,CAAC,MAAM;AACT,eAAO;AAAA;AAGT;AAAA;AAAA,KAGF,oCAAC,8BAAD;AAAA,IAAgB,WAAU;AAAA,OAE5B,oCAAC,kBAAD;AAAA,IACE;AAAA,IACA;AAAA,OAIJ,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IACE,WAAW,2BAAK,wBAAwB,2BAA2B;AAAA,KAElE,qBAAoB,UAGvB,oCAAC,eAAD;AAAA,IACE,UAAU,qBAAqB,wBAAwB;AAAA,IACvD,MAAK;AAAA,IACL,SAAS;AAAA,IACT,WAAU;AAAA,KACX;AAAA;AAQT,IAAM,6BAA6B,CAAC,UAAkB;AACpD,MAAI,UAAU,IAAI;AAChB,WAAO;AAAA;AAGT,MAAI,SAAS,IAAI;AACf,WAAO;AAAA;AAGT,MAAI,SAAS,IAAI;AACf,WAAO;AAAA;AAGT,MAAI,SAAS,IAAI;AACf,WAAO;AAAA;AAGT,MAAI,QAAQ,IAAI;AACd,WAAO;AAAA;AAAA;;;AExFX,oBAA4B;AAC5B,oBAAiB;AAEV,qCAAqC,EAAE,UAAU;AACtD,MAAI,OAAO,SAAS,GAAG;AACrB,WAAO;AAAA;AAGT,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,OAAO,IAAI,CAAC,EAAE,IAAI,YAAY,aAAa,gBAAgB;AAC1D,WACE,oCAAC,OAAD;AAAA,MACE,WAAU;AAAA,MACV,KAAK;AAAA,OAEL,oCAAC,OAAD;AAAA,MACE,WAAU;AAAA,MACV,KAAK;AAAA,MACL,KAAK;AAAA,QAGP,oCAAC,UAAD;AAAA,MACE,MAAK;AAAA,MACL,cAAW;AAAA,MACX,WAAU;AAAA,MACV,SAAS;AAAA,OAET,oCAAC,2BAAD;AAAA,MAAa,WAAU;AAAA,SAGzB,oCAAC,OAAD;AAAA,MACE,WAAW,2BACT,kIACA,aAAa;AAAA;AAAA;AAAA;;;ACjC7B,qBAAkC;AAI3B,uBAAuB,SAAkB,cAA0B,aAAyB;AACjG,QAAM,iBAAiB,QAAQ,SAAS;AACxC,QAAM,kBAAkB,2BAA4B;AAEpD,gCAAU,MAAM;AACd,QAAI,gBAAgB;AAClB,sBAAgB,QAAS;AACzB;AACA;AAAA;AAAA,KAGD,CAAC;AAEJ,SAAO;AAAA;;;AClBT,wBAA2B;AAKpB,iCAAiC;AACtC,QAAM,CAAC,wBAAwB,WAAW,kCAAW,uBAAuB;AAAA,IAC1E,SAAS;AAAA,IACT,kBAAkB;AAAA,IAClB,QAAQ,EAAE,SAAS;AAAA;AAGrB,QAAM,sBAAsB,uBAAuB,QAAQ;AAE3D,sBAAoB,OAAe;AACjC,QAAI,wBAAwB,IAAI;AAC9B,aAAO;AAAA;AAGT,YAAQ,WAAW;AAAA,MACjB,SAAS;AAAA,MACT,QAAQ;AAAA,QACN,SAAS,gBAAgB;AAAA;AAAA;AAAA;AAK/B,4BAA0B,KAAa;AACrC,QAAI,QAAQ,eAAe,wBAAwB,IAAI;AACrD,cAAQ,WAAW;AAAA,QACjB,SAAS,uBAAuB,QAAQ,MAAM,GAAG;AAAA;AAAA;AAAA;AAKvD,0BAAwB;AACtB,YAAQ,WAAW;AAAA,MACjB,SAAS;AAAA,MACT,QAAQ;AAAA,QACN,SAAS;AAAA;AAAA;AAAA;AAKf,+BAA6B,OAAyB;AACpD,YAAQ,oBAAoB;AAAA;AAG9B,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA;AAIJ,+BAA+B,OAI5B;AACD,SAAO;AAAA,IACL,oBAAoB,kBAAoC;AACtD,aAAO,iCAAK,QAAL,EAAY;AAAA;AAAA,IAGrB,WAAW,EAAE,SAAS,UAA0B;AAC9C,aAAO,iCACF,QADE;AAAA,QAEL;AAAA,QACA,QAAQ,kCACH,MAAM,SACN;AAAA;AAAA;AAAA;AAAA;AAOb,yBAAyB,SAAiB;AACxC,MAAI,OAAO,YAAY,YAAY,QAAQ,SAAS,GAAG;AACrD,WAAO;AAAA;AAET,MAAI,QAAQ,SAAS,IAAI;AACvB,WAAO;AAAA;AAAA;;;AL1EJ,wBAAwB,EAAE,QAAwB;AAXzD;AAYE,UAAQ,IAAI,2EAAoE;AAChF,QAAM,UAAU;AAChB,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA,SAAS;AAAA,IACT;AAAA,MACE,eAAe,EAAE,UAAU;AAE/B,QAAM,YAAY,aAAa,EAAE,UAAU;AAE3C,QAAM;AAAA,IACJ,wBAAwB,EAAE,SAAS;AAAA,IACnC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,MACE;AAEJ,QAAM,kBAAkB,cAAc,SAAS,cAAc;AAC7D,QAAM,aAAa,QAAQ,UAAU;AACrC,QAAM,sBAAsB,QAAQ;AAEpC,QAAM,WAAW,OAAO,MAAwC;AAC9D,MAAE;AAEF,QAAI,YAAY;AACd,aAAO;AAAA;AAGT,UAAM,QAAO;AACb,QAAI,CAAC,OAAM;AACT;AAAA;AAGF,UAAM,WAAW,OAAO,IAAI,CAAC,EAAE,UAAU;AAEzC,YAAQ,OACN;AAAA,MACE;AAAA,MACA;AAAA,OACI,sCAAU,UAAS,KAAK,EAAE,aAHhC;AAAA,MAIE,YAAY;AAAA,QAEd,EAAE,QAAQ;AAAA;AAId,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAA+C,qBAG/D,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,qBAAD;AAAA,IACE,IAAI,OAAO,KAAK,WAAW;AAAA,IAC3B,WAAU;AAAA,KAEV,oCAAC,YAAD;AAAA,IACE,WAAW,mCAAM,YAAN,mBAAe;AAAA,IAC1B,UAAU,KAAK;AAAA,OAInB,oCAAC,QAAD;AAAA,IACE,WAAU;AAAA,IACV;AAAA,KAEA,oCAAC,OAAD;AAAA,IACE,WAAW,qCACT,SAAS,eAAe,iBAAiB;AAAA,KAEvC,SAAS,iBAEb,oCAAC,SAAD,mBAAW,SAAS,mBACpB,oCAAC,yCAAD;AAAA,IACE,WAAW,2BACT,qHACA,cAAc;AAAA,IAEhB,aAAY;AAAA,IACZ,MAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU,CAAC,MAAM,WAAW,EAAE,OAAO;AAAA,IACrC,WAAW,CAAC,MAAM,iBAAiB,EAAE;AAAA,IACrC,KAAK;AAAA,IACL,UAAU;AAAA,MAEZ,oCAAC,6BAAD;AAAA,IAA6B;AAAA,OAE9B,SAAS,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAgB,UAAc,MAErD,oCAAC,2BAAD;AAAA,IACE;AAAA,IACA,iBAAiB,SAAS;AAAA,IAC1B;AAAA,IACA;AAAA,IACA;AAAA,IACA,mBAAmB;AAAA;AAAA;;;AFxGxB,gBAAgB;AACrB,QAAM,SAAS;AACf,QAAM,OAAO;AAEb,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,gBAAD;AAAA,IAAgB;AAAA,MAChB,oCAAC,WAAD;AAAA,IAAW;AAAA,MACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAyC,2CACd,KACxC,oCAAC,KAAD;AAAA,IAAG,MAAK;AAAA,KAAsD,0DAKlE,oCAAC,eAAD,OACA,oCAAC,uBAAD;AAAA;;;AQvBN,mCACE,QACA;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,GAEF;AAEA,QAAM,YAAY,WAAW,SAAS,MAAM,OAAO;AAEnD,SAAO,MAAM,MACX,aAAa,OAAO,aACpB,mBAAmB;AAAA,IACjB,MAAM,EAAE,SAAS,WAAW;AAAA,IAC5B;AAAA,IACA,QAAQ;AAAA;AAAA;AAKd,+BAAsC,QAAgB;AACpD,SAAO,MAAM,MAAM,aAAa,OAAO,eAAe,mBAAmB,EAAE;AAAA;;;ATnBtE,IAAM,UAAyB,OAAO,EAAE,cAA4B;AACzE,QAA4D,WAAM,cAAc,UAAxE,cAAY,SAAS,WAAW,WAAoB,IAAT,iBAAS,IAAT,CAA3C,cAAY,WAAS,aAAW;AAExC,UAAQ;AAAA,SACD;AACH,aAAO,MAAM,kBAAkB,SAAS;AAAA,SAErC;AACH,aAAO,MAAM,gBAAgB,SAAS;AAAA,SAEnC;AACH,aAAO,MAAM,kBAAkB,SAAS;AAAA,SAErC;AACH,aAAO,MAAM,oBAAoB,QAAQ;AAAA;AAGzC;AAAA;AAAA;AAIC,IAAM,WAAyB,OAAO,EAAE,cAAc;AAC3D,QAAM,SAAS,UAAU;AACzB,SAAO,MAAM,gBAAgB;AAAA;AAGhB,qBAAqB;AAClC,SAAO,oCAAC,MAAD;AAAA;;;AUhCT;AAAA;AAAA;AAAA;AAAA;;;ACAA,mBAAyB;AASlB,IAAM,mBAAmB,OAAO,wBAAyC;AAC9E,QAAM,iBAAiB,MAAM,MAC3B,aAAa,KAAK,UAClB,mBAAmB,EAAE,QAAQ,QAAQ,MAAM;AAG7C,MAAI,eAAe,WAAW,KAAK;AACjC,WAAO,2BAAS;AAAA;AAGlB,SAAO;AAAA;AAGF,IAAM,gBAAgB,OAAO,qBAAsC;AACxE,QAAM,gBAAgB,MAAM,MAC1B,aAAa,KAAK,OAClB,mBAAmB,EAAE,QAAQ,QAAQ,MAAM;AAG7C,MAAI,cAAc,WAAW,KAAK;AAChC,WAAO,2BAAS,MAAM,MAAM;AAAA,MAC1B,SAAS;AAAA,QACP,cAAc,cAAc,QAAQ,IAAI;AAAA;AAAA;AAAA;AAK9C,SAAO;AAAA;AAGF,IAAM,YAA4B,OAAO,WAAW;AACzD,QAAM,OAAO,MAAM,MAAM,aAAa,KAAK,IAAI,mBAAmB,EAAE;AAMpE,SAAO;AAAA;;;AC9CT,qBAA+C;AAC/C,sBAAwB;AACxB,mCAA8B;AAC9B,iBAAkB;AAGX,iBAAiB;AACtB,QAAM,CAAC,gBAAgB;AACvB,QAAM,cAAc;AACpB,QAAM,gBAAgB,aAAa,IAAI;AAEvC,SACE,oCAAC,MAAD,MACE,oCAAC,4CAAD;AAAA,IACE,QAAO;AAAA,IACP,QAAO;AAAA,IACP,WAAW;AAAA,IACX,YAAU;AAAA,KAEV,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,gBAAD;AAAA,IACE,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,MAAK;AAAA,IACL,OAAM;AAAA,MAGR,oCAAC,gBAAD;AAAA,IACE,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,MAAK;AAAA,IACL,OAAM;AAAA,OAIV,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,gBACC,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAiB,iDAEjC,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAgB,4CAAa,WAAU,YAAY,UAAU,MAIjF,oCAAC,cAAD;AAAA,IAAc,WAAU;AAAA;AAAA;AAMhC,IAAM,iBAAiB,6BACrB,aAAE,OAAO;AAAA,EACP,UAAU,aACP,SACA,SAAS,wBACT,IAAI,GAAG,yCACP,IAAI,IAAI;AAAA,EACX,UAAU,aACP,SACA,SAAS,wBACT,IAAI,GAAG,yCACP,IAAI,IAAI;AAAA;;;AC5Df,uBAAwB;AACxB,mCAA8B;AAC9B,kBAAkB;AAElB,qBAA8B;AAEvB,oBAAoB;AACzB,QAAM,iBAAiB;AAEvB,SACE,oCAAC,MAAD,MACE,oCAAC,4CAAD;AAAA,IACE,QAAO;AAAA,IACP,QAAO;AAAA,IACP,WAAW;AAAA,IACX,YAAU;AAAA,KAEV,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,gBAAD;AAAA,IACE,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,MAAK;AAAA,IACL,OAAM;AAAA,MAGR,oCAAC,gBAAD;AAAA,IACE,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,MAAK;AAAA,IACL,OAAM;AAAA,MAER,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACb,kDAAgB,WAAU,eAAe,UAAU,MAIxD,oCAAC,cAAD;AAAA,IAAc,WAAU;AAAA;AAAA;AAMhC,IAAM,oBAAoB,8BACxB,cAAE,OAAO;AAAA,EACP,UAAU,cACP,SACA,SAAS,wBACT,IAAI,GAAG,yCACP,IAAI,IAAI;AAAA,EACX,UAAU,cACP,SACA,SAAS,wBACT,IAAI,GAAG,yCACP,IAAI,IAAI;AAAA;;;ACrDf,qBAAgC;AAChC,oBAAiB;AAEV,sBAAsB;AAC3B,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,OAEjB,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACd,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAyE,WAGtF,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAA0B,uBACxC,oCAAC,uBAAD,OACA,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oCAAC,wBAAD;AAAA,IACE,IAAG;AAAA,IACH,SAAO;AAAA,IACP,WAAW,CAAC,EAAE,eAAe,2BAAK,eAAc,YAAY;AAAA,KAE5D,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAQ,cAG1B,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAmB,OAEhC,oCAAC,wBAAD;AAAA,IACE,IAAG;AAAA,IACH,SAAO;AAAA,IACP,WAAW,CAAC,EAAE,eAAe,2BAAK,eAAc,YAAY;AAAA,KAC7D;AAAA;AASX,IAAM,gBACJ;AAEF,IAAM,kBAAkB;;;AJvCjB,IAAM,WAAyB,OAAO,EAAE,cAAc;AAC3D,QAAM,SAAS,UAAU;AACzB,SAAO,MAAM,UAAU;AAAA;AAGV,iBAAiB;AAC9B,SAAO,oCAAC,YAAD;AAAA;;;AKVT;AAAA;AAAA;AAAA;AAAA;AAIO,IAAM,UAAyB,OAAO,EAAE,cAA4B;AACzE,QAAM,EAAE,UAAU,aAAa,MAAM,cAAc;AACnD,SAAO,MAAM,iBAAiB,EAAE,UAAU;AAAA;AAG7B,yBAAyB;AACtC,SAAO,oCAAC,UAAD;AAAA;;;ACVT;AAAA;AAAA;AAAA;AAAA;AAIO,IAAI,UAAyB,OAAO,EAAE,cAA4B;AACvE,QAAM,EAAE,UAAU,aAAa,MAAM,cAAc;AAEnD,SAAO,MAAM,cAAc,EAAE,UAAU;AAAA;AAG1B,sBAAsB;AACnC,SAAO,oCAAC,OAAD;AAAA;;;ACXT,IAAO,0BAAQ,EAAC,WAAU,YAAW,SAAQ,EAAC,UAAS,mCAAkC,WAAU,CAAC,oCAAmC,oCAAmC,uCAAqC,UAAS,EAAC,QAAO,EAAC,MAAK,QAAO,YAAW,QAAU,QAAO,IAAG,SAAQ,QAAU,iBAAgB,QAAU,UAAS,2BAA0B,WAAU,CAAC,oCAAmC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,kBAAiB,EAAC,MAAK,kBAAiB,YAAW,QAAO,QAAO,QAAU,SAAQ,QAAU,iBAAgB,QAAU,UAAS,qCAAoC,WAAU,CAAC,oCAAmC,qCAAoC,aAAY,OAAM,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,4BAA2B,EAAC,MAAK,4BAA2B,YAAW,kBAAiB,QAAO,aAAY,SAAQ,QAAU,iBAAgB,QAAU,UAAS,+CAA8C,WAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,qCAAoC,aAAY,MAAK,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,sCAAqC,EAAC,MAAK,sCAAqC,YAAW,4BAA2B,QAAO,aAAY,SAAQ,QAAU,iBAAgB,QAAU,UAAS,yDAAwD,WAAU,CAAC,oCAAmC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,sCAAqC,EAAC,MAAK,sCAAqC,YAAW,4BAA2B,QAAO,aAAY,SAAQ,QAAU,iBAAgB,QAAU,UAAS,yDAAwD,WAAU,CAAC,oCAAmC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,4BAA2B,EAAC,MAAK,4BAA2B,YAAW,kBAAiB,QAAO,aAAY,SAAQ,QAAU,iBAAgB,QAAU,UAAS,+CAA8C,WAAU,CAAC,oCAAmC,oCAAmC,qCAAoC,aAAY,MAAK,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,0BAAyB,EAAC,MAAK,0BAAyB,YAAW,kBAAiB,QAAO,WAAU,SAAQ,QAAU,iBAAgB,QAAU,UAAS,6CAA4C,WAAU,CAAC,oCAAmC,qCAAoC,aAAY,OAAM,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,uBAAsB,EAAC,MAAK,uBAAsB,YAAW,kBAAiB,QAAO,QAAO,SAAQ,QAAU,iBAAgB,QAAU,UAAS,0CAAyC,WAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,qCAAoC,aAAY,MAAK,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,wBAAuB,EAAC,MAAK,wBAAuB,YAAW,kBAAiB,QAAO,QAAU,SAAQ,MAAK,iBAAgB,QAAU,UAAS,2CAA0C,WAAU,QAAU,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,yBAAwB,EAAC,MAAK,yBAAwB,YAAW,kBAAiB,QAAO,UAAS,SAAQ,QAAU,iBAAgB,QAAU,UAAS,4CAA2C,WAAU,QAAU,aAAY,MAAK,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,4BAA2B,EAAC,MAAK,4BAA2B,YAAW,kBAAiB,QAAO,aAAY,SAAQ,QAAU,iBAAgB,QAAU,UAAS,+CAA8C,WAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,qCAAoC,aAAY,MAAK,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,kCAAiC,EAAC,MAAK,kCAAiC,YAAW,4BAA2B,QAAO,SAAQ,SAAQ,QAAU,iBAAgB,QAAU,UAAS,qDAAoD,WAAU,CAAC,oCAAmC,oCAAmC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,qCAAoC,EAAC,MAAK,qCAAoC,YAAW,4BAA2B,QAAO,YAAW,SAAQ,QAAU,iBAAgB,QAAU,UAAS,wDAAuD,WAAU,CAAC,oCAAmC,oCAAmC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,kCAAiC,EAAC,MAAK,kCAAiC,YAAW,4BAA2B,QAAO,SAAQ,SAAQ,QAAU,iBAAgB,QAAU,UAAS,qDAAoD,WAAU,CAAC,oCAAmC,oCAAmC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,kBAAiB,EAAC,MAAK,kBAAiB,YAAW,QAAO,QAAO,QAAU,SAAQ,QAAU,iBAAgB,QAAU,UAAS,qCAAoC,WAAU,CAAC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,wBAAuB,EAAC,MAAK,wBAAuB,YAAW,kBAAiB,QAAO,SAAQ,SAAQ,QAAU,iBAAgB,QAAU,UAAS,2CAA0C,WAAU,CAAC,oCAAmC,qCAAoC,aAAY,MAAK,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,2BAA0B,EAAC,MAAK,2BAA0B,YAAW,kBAAiB,QAAO,YAAW,SAAQ,QAAU,iBAAgB,QAAU,UAAS,8CAA6C,WAAU,CAAC,oCAAmC,qCAAoC,aAAY,MAAK,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,WAAQ,OAAM;;;A1FoBrmN,IAAM,QAAQ,EAAE,QAAQ;AACxB,IAAM,SAAS;AAAA,EACpB,QAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,kBAAkB;AAAA,IACd,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,4BAA4B;AAAA,IACxB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,sCAAsC;AAAA,IAClC,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,sCAAsC;AAAA,IAClC,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,4BAA4B;AAAA,IACxB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,4BAA4B;AAAA,IACxB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,qCAAqC;AAAA,IACjC,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,kCAAkC;AAAA,IAC9B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,kCAAkC;AAAA,IAC9B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,0BAA0B;AAAA,IACtB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,yBAAyB;AAAA,IACrB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,wBAAwB;AAAA,IACpB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,uBAAuB;AAAA,IACnB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,kBAAkB;AAAA,IACd,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,2BAA2B;AAAA,IACvB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,wBAAwB;AAAA,IACpB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA;;;AFjJd,wBAAwB,OAAO,SAAS;AACtC,MAAI;AACJ,MAAI;AAEJ,MAAI,MAAM,iBAAiB,MAAM;AAC/B,wBAAoB,MAAM;AAAA;AAG5B,MAAI,aAAa,MAAM,QAAQ;AAC/B,MAAI,uBAAuB,MAAM,QAAQ;AAEzC,MAAI,cAAc,QAAQ,YAAY,KAAK,aAAa;AACtD,6BAAyB,WAAW,MAAM,KAAK;AAAA;AAGjD,MAAI,cAAc;AAAA,IAChB,+BAA+B;AAAA,IAC/B;AAAA,IACA,uBAAuB;AAAA;AAIzB,SAAO,KAAK,aAAa,QAAQ,CAAC,QAAQ;AACxC,QAAI,YAAY,QAAQ,MAAM;AAC5B,aAAO,YAAY;AAAA;AAAA;AAIvB,SAAO;AAAA;AAGF,IAAM,UAAU,yCAAqB;AAAA,EAC1C;AAAA,EACA;AAAA,EACA,MAAM;AAAA;",
  "names": []
}
